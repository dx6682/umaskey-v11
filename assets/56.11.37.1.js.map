{"version":3,"sources":["webpack:///./node_modules/prismjs/themes/prism-okaidia.css","webpack:///./node_modules/vue-prism-component/dist/vue-prism-component.common.js","webpack:///./node_modules/prismjs/prism.js","webpack:///./node_modules/prismjs/themes/prism-okaidia.css?f973"],"names":["exports","___CSS_LOADER_API_IMPORT___","push","module","i","assign","obj","arguments$1","arguments","length","p","index","functional","props","code","type","String","inline","Boolean","default","language","render","h","ctx","children","text","prismLanguage","Prism","languages","className","data","class","domProps","innerHTML","highlight","_self","lang","uniqueId","plainTextGrammar","_","manual","disableWorkerMessageHandler","util","encode","tokens","Token","content","alias","Array","isArray","map","replace","o","Object","prototype","toString","call","slice","objId","defineProperty","value","clone","deepClone","visited","id","key","hasOwnProperty","forEach","v","getLanguage","element","test","parentElement","match","toLowerCase","currentScript","document","Error","err","src","exec","stack","scripts","getElementsByTagName","isActive","defaultActivation","no","classList","contains","plain","plaintext","txt","extend","redef","insertBefore","inside","before","insert","root","grammar","ret","token","newToken","old","DFS","this","callback","property","propertyType","plugins","highlightAll","async","highlightAllUnder","container","env","selector","hooks","run","elements","apply","querySelectorAll","highlightElement","parent","nodeName","textContent","insertHighlightedCode","highlightedCode","hasAttribute","setAttribute","Worker","worker","filename","onmessage","evt","postMessage","JSON","stringify","immediateClose","tokenize","rest","tokenList","LinkedList","addAfter","head","matchGrammar","startNode","startPos","rematch","patterns","j","cause","patternObj","lookbehind","greedy","pattern","global","flags","RegExp","source","currentNode","next","pos","tail","reach","str","removeCount","matchPattern","from","to","k","matchStr","after","removeFrom","prev","removeRange","wrapped","nestedRematch","list","array","node","toArray","all","add","name","callbacks","matchedStr","lastIndex","lookbehindLength","newNode","count","s","e","tag","classes","attributes","aliases","join","addEventListener","message","parse","close","script","highlightAutomaticallyCallback","readyState","defer","window","requestAnimationFrame","setTimeout","WorkerGlobalScope","self","markup","tagName","includedCdataInside","def","attrName","html","mathml","svg","xml","ssml","atom","rss","string","css","addInlined","addAttribute","clike","javascript","regex","js","Element","matches","msMatchesSelector","webkitMatchesSelector","EXTENSIONS","SELECTOR","pre","appendChild","createElement","getAttribute","extension","setLanguageClass","autoloader","loadLanguages","xhr","XMLHttpRequest","open","onreadystatechange","status","responseText","statusText","send","fileHighlight","logged","console","warn","trim","locals"],"mappings":"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","file":"56.11.37.1.js","sourcesContent":["// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.id, \"code[class*=language-],pre[class*=language-]{color:#f8f8f2;background:none;text-shadow:0 1px rgba(0,0,0,.3);font-family:Consolas,Monaco,Andale Mono,Ubuntu Mono,monospace;font-size:1em;text-align:left;white-space:pre;word-spacing:normal;word-break:normal;word-wrap:normal;line-height:1.5;-moz-tab-size:4;-o-tab-size:4;tab-size:4;-webkit-hyphens:none;-moz-hyphens:none;-ms-hyphens:none;hyphens:none}pre[class*=language-]{padding:1em;margin:.5em 0;overflow:auto;border-radius:.3em}:not(pre)>code[class*=language-],pre[class*=language-]{background:#272822}:not(pre)>code[class*=language-]{padding:.1em;border-radius:.3em;white-space:normal}.token.cdata,.token.comment,.token.doctype,.token.prolog{color:#8292a2}.token.punctuation{color:#f8f8f2}.token.namespace{opacity:.7}.token.constant,.token.deleted,.token.property,.token.symbol,.token.tag{color:#f92672}.token.boolean,.token.number{color:#ae81ff}.token.attr-name,.token.builtin,.token.char,.token.inserted,.token.selector,.token.string{color:#a6e22e}.language-css .token.string,.style .token.string,.token.entity,.token.operator,.token.url,.token.variable{color:#f8f8f2}.token.atrule,.token.attr-value,.token.class-name,.token.function{color:#e6db74}.token.keyword{color:#66d9ef}.token.important,.token.regex{color:#fd971f}.token.bold,.token.important{font-weight:700}.token.italic{font-style:italic}.token.entity{cursor:help}\", \"\"]);\n// Exports\nmodule.exports = exports;\n","'use strict';\n\nfunction assign(obj) {\n  var arguments$1 = arguments;\n\n  for (var i = 1; i < arguments.length; i++) {\n    // eslint-disable-next-line guard-for-in, prefer-rest-params\n    for (var p in arguments[i]) { obj[p] = arguments$1[i][p]; }\n  }\n  return obj\n}\n\nvar index = {\n  functional: true,\n  props: {\n    code: {\n      type: String\n    },\n    inline: {\n      type: Boolean,\n      default: false\n    },\n    language: {\n      type: String,\n      default: 'markup'\n    }\n  },\n  render: function render(h, ctx) {\n    var code =\n      ctx.props.code ||\n      (ctx.children && ctx.children.length > 0 ? ctx.children[0].text : '');\n    var inline = ctx.props.inline;\n    var language = ctx.props.language;\n    var prismLanguage = Prism.languages[language];\n    var className = \"language-\" + language;\n\n    if (process.env.NODE_ENV === 'development' && !prismLanguage) {\n      throw new Error(\n        (\"Prism component for language \\\"\" + language + \"\\\" was not found, did you forget to register it? See all available ones: https://cdn.jsdelivr.net/npm/prismjs/components/\")\n      )\n    }\n\n    if (inline) {\n      return h(\n        'code',\n        assign({}, ctx.data, {\n          class: [ctx.data.class, className],\n          domProps: assign({}, ctx.data.domProps, {\n            innerHTML: Prism.highlight(code, prismLanguage)\n          })\n        })\n      )\n    }\n\n    return h(\n      'pre',\n      assign({}, ctx.data, {\n        class: [ctx.data.class, className]\n      }),\n      [\n        h('code', {\n          class: className,\n          domProps: {\n            innerHTML: Prism.highlight(code, prismLanguage)\n          }\n        })\n      ]\n    )\n  }\n};\n\nmodule.exports = index;\n","\n/* **********************************************\n     Begin prism-core.js\n********************************************** */\n\n/// <reference lib=\"WebWorker\"/>\n\nvar _self = (typeof window !== 'undefined')\n\t? window   // if in browser\n\t: (\n\t\t(typeof WorkerGlobalScope !== 'undefined' && self instanceof WorkerGlobalScope)\n\t\t\t? self // if in worker\n\t\t\t: {}   // if in node js\n\t);\n\n/**\n * Prism: Lightweight, robust, elegant syntax highlighting\n *\n * @license MIT <https://opensource.org/licenses/MIT>\n * @author Lea Verou <https://lea.verou.me>\n * @namespace\n * @public\n */\nvar Prism = (function (_self) {\n\n\t// Private helper vars\n\tvar lang = /\\blang(?:uage)?-([\\w-]+)\\b/i;\n\tvar uniqueId = 0;\n\n\t// The grammar object for plaintext\n\tvar plainTextGrammar = {};\n\n\n\tvar _ = {\n\t\t/**\n\t\t * By default, Prism will attempt to highlight all code elements (by calling {@link Prism.highlightAll}) on the\n\t\t * current page after the page finished loading. This might be a problem if e.g. you wanted to asynchronously load\n\t\t * additional languages or plugins yourself.\n\t\t *\n\t\t * By setting this value to `true`, Prism will not automatically highlight all code elements on the page.\n\t\t *\n\t\t * You obviously have to change this value before the automatic highlighting started. To do this, you can add an\n\t\t * empty Prism object into the global scope before loading the Prism script like this:\n\t\t *\n\t\t * ```js\n\t\t * window.Prism = window.Prism || {};\n\t\t * Prism.manual = true;\n\t\t * // add a new <script> to load Prism's script\n\t\t * ```\n\t\t *\n\t\t * @default false\n\t\t * @type {boolean}\n\t\t * @memberof Prism\n\t\t * @public\n\t\t */\n\t\tmanual: _self.Prism && _self.Prism.manual,\n\t\tdisableWorkerMessageHandler: _self.Prism && _self.Prism.disableWorkerMessageHandler,\n\n\t\t/**\n\t\t * A namespace for utility methods.\n\t\t *\n\t\t * All function in this namespace that are not explicitly marked as _public_ are for __internal use only__ and may\n\t\t * change or disappear at any time.\n\t\t *\n\t\t * @namespace\n\t\t * @memberof Prism\n\t\t */\n\t\tutil: {\n\t\t\tencode: function encode(tokens) {\n\t\t\t\tif (tokens instanceof Token) {\n\t\t\t\t\treturn new Token(tokens.type, encode(tokens.content), tokens.alias);\n\t\t\t\t} else if (Array.isArray(tokens)) {\n\t\t\t\t\treturn tokens.map(encode);\n\t\t\t\t} else {\n\t\t\t\t\treturn tokens.replace(/&/g, '&amp;').replace(/</g, '&lt;').replace(/\\u00a0/g, ' ');\n\t\t\t\t}\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Returns the name of the type of the given value.\n\t\t\t *\n\t\t\t * @param {any} o\n\t\t\t * @returns {string}\n\t\t\t * @example\n\t\t\t * type(null)      === 'Null'\n\t\t\t * type(undefined) === 'Undefined'\n\t\t\t * type(123)       === 'Number'\n\t\t\t * type('foo')     === 'String'\n\t\t\t * type(true)      === 'Boolean'\n\t\t\t * type([1, 2])    === 'Array'\n\t\t\t * type({})        === 'Object'\n\t\t\t * type(String)    === 'Function'\n\t\t\t * type(/abc+/)    === 'RegExp'\n\t\t\t */\n\t\t\ttype: function (o) {\n\t\t\t\treturn Object.prototype.toString.call(o).slice(8, -1);\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Returns a unique number for the given object. Later calls will still return the same number.\n\t\t\t *\n\t\t\t * @param {Object} obj\n\t\t\t * @returns {number}\n\t\t\t */\n\t\t\tobjId: function (obj) {\n\t\t\t\tif (!obj['__id']) {\n\t\t\t\t\tObject.defineProperty(obj, '__id', { value: ++uniqueId });\n\t\t\t\t}\n\t\t\t\treturn obj['__id'];\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Creates a deep clone of the given object.\n\t\t\t *\n\t\t\t * The main intended use of this function is to clone language definitions.\n\t\t\t *\n\t\t\t * @param {T} o\n\t\t\t * @param {Record<number, any>} [visited]\n\t\t\t * @returns {T}\n\t\t\t * @template T\n\t\t\t */\n\t\t\tclone: function deepClone(o, visited) {\n\t\t\t\tvisited = visited || {};\n\n\t\t\t\tvar clone; var id;\n\t\t\t\tswitch (_.util.type(o)) {\n\t\t\t\t\tcase 'Object':\n\t\t\t\t\t\tid = _.util.objId(o);\n\t\t\t\t\t\tif (visited[id]) {\n\t\t\t\t\t\t\treturn visited[id];\n\t\t\t\t\t\t}\n\t\t\t\t\t\tclone = /** @type {Record<string, any>} */ ({});\n\t\t\t\t\t\tvisited[id] = clone;\n\n\t\t\t\t\t\tfor (var key in o) {\n\t\t\t\t\t\t\tif (o.hasOwnProperty(key)) {\n\t\t\t\t\t\t\t\tclone[key] = deepClone(o[key], visited);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\treturn /** @type {any} */ (clone);\n\n\t\t\t\t\tcase 'Array':\n\t\t\t\t\t\tid = _.util.objId(o);\n\t\t\t\t\t\tif (visited[id]) {\n\t\t\t\t\t\t\treturn visited[id];\n\t\t\t\t\t\t}\n\t\t\t\t\t\tclone = [];\n\t\t\t\t\t\tvisited[id] = clone;\n\n\t\t\t\t\t\t(/** @type {Array} */(/** @type {any} */(o))).forEach(function (v, i) {\n\t\t\t\t\t\t\tclone[i] = deepClone(v, visited);\n\t\t\t\t\t\t});\n\n\t\t\t\t\t\treturn /** @type {any} */ (clone);\n\n\t\t\t\t\tdefault:\n\t\t\t\t\t\treturn o;\n\t\t\t\t}\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Returns the Prism language of the given element set by a `language-xxxx` or `lang-xxxx` class.\n\t\t\t *\n\t\t\t * If no language is set for the element or the element is `null` or `undefined`, `none` will be returned.\n\t\t\t *\n\t\t\t * @param {Element} element\n\t\t\t * @returns {string}\n\t\t\t */\n\t\t\tgetLanguage: function (element) {\n\t\t\t\twhile (element && !lang.test(element.className)) {\n\t\t\t\t\telement = element.parentElement;\n\t\t\t\t}\n\t\t\t\tif (element) {\n\t\t\t\t\treturn (element.className.match(lang) || [, 'none'])[1].toLowerCase();\n\t\t\t\t}\n\t\t\t\treturn 'none';\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Returns the script element that is currently executing.\n\t\t\t *\n\t\t\t * This does __not__ work for line script element.\n\t\t\t *\n\t\t\t * @returns {HTMLScriptElement | null}\n\t\t\t */\n\t\t\tcurrentScript: function () {\n\t\t\t\tif (typeof document === 'undefined') {\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\t\t\t\tif ('currentScript' in document && 1 < 2 /* hack to trip TS' flow analysis */) {\n\t\t\t\t\treturn /** @type {any} */ (document.currentScript);\n\t\t\t\t}\n\n\t\t\t\t// IE11 workaround\n\t\t\t\t// we'll get the src of the current script by parsing IE11's error stack trace\n\t\t\t\t// this will not work for inline scripts\n\n\t\t\t\ttry {\n\t\t\t\t\tthrow new Error();\n\t\t\t\t} catch (err) {\n\t\t\t\t\t// Get file src url from stack. Specifically works with the format of stack traces in IE.\n\t\t\t\t\t// A stack will look like this:\n\t\t\t\t\t//\n\t\t\t\t\t// Error\n\t\t\t\t\t//    at _.util.currentScript (http://localhost/components/prism-core.js:119:5)\n\t\t\t\t\t//    at Global code (http://localhost/components/prism-core.js:606:1)\n\n\t\t\t\t\tvar src = (/at [^(\\r\\n]*\\((.*):.+:.+\\)$/i.exec(err.stack) || [])[1];\n\t\t\t\t\tif (src) {\n\t\t\t\t\t\tvar scripts = document.getElementsByTagName('script');\n\t\t\t\t\t\tfor (var i in scripts) {\n\t\t\t\t\t\t\tif (scripts[i].src == src) {\n\t\t\t\t\t\t\t\treturn scripts[i];\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Returns whether a given class is active for `element`.\n\t\t\t *\n\t\t\t * The class can be activated if `element` or one of its ancestors has the given class and it can be deactivated\n\t\t\t * if `element` or one of its ancestors has the negated version of the given class. The _negated version_ of the\n\t\t\t * given class is just the given class with a `no-` prefix.\n\t\t\t *\n\t\t\t * Whether the class is active is determined by the closest ancestor of `element` (where `element` itself is\n\t\t\t * closest ancestor) that has the given class or the negated version of it. If neither `element` nor any of its\n\t\t\t * ancestors have the given class or the negated version of it, then the default activation will be returned.\n\t\t\t *\n\t\t\t * In the paradoxical situation where the closest ancestor contains __both__ the given class and the negated\n\t\t\t * version of it, the class is considered active.\n\t\t\t *\n\t\t\t * @param {Element} element\n\t\t\t * @param {string} className\n\t\t\t * @param {boolean} [defaultActivation=false]\n\t\t\t * @returns {boolean}\n\t\t\t */\n\t\t\tisActive: function (element, className, defaultActivation) {\n\t\t\t\tvar no = 'no-' + className;\n\n\t\t\t\twhile (element) {\n\t\t\t\t\tvar classList = element.classList;\n\t\t\t\t\tif (classList.contains(className)) {\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\t\t\t\t\tif (classList.contains(no)) {\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t\telement = element.parentElement;\n\t\t\t\t}\n\t\t\t\treturn !!defaultActivation;\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * This namespace contains all currently loaded languages and the some helper functions to create and modify languages.\n\t\t *\n\t\t * @namespace\n\t\t * @memberof Prism\n\t\t * @public\n\t\t */\n\t\tlanguages: {\n\t\t\t/**\n\t\t\t * The grammar for plain, unformatted text.\n\t\t\t */\n\t\t\tplain: plainTextGrammar,\n\t\t\tplaintext: plainTextGrammar,\n\t\t\ttext: plainTextGrammar,\n\t\t\ttxt: plainTextGrammar,\n\n\t\t\t/**\n\t\t\t * Creates a deep copy of the language with the given id and appends the given tokens.\n\t\t\t *\n\t\t\t * If a token in `redef` also appears in the copied language, then the existing token in the copied language\n\t\t\t * will be overwritten at its original position.\n\t\t\t *\n\t\t\t * ## Best practices\n\t\t\t *\n\t\t\t * Since the position of overwriting tokens (token in `redef` that overwrite tokens in the copied language)\n\t\t\t * doesn't matter, they can technically be in any order. However, this can be confusing to others that trying to\n\t\t\t * understand the language definition because, normally, the order of tokens matters in Prism grammars.\n\t\t\t *\n\t\t\t * Therefore, it is encouraged to order overwriting tokens according to the positions of the overwritten tokens.\n\t\t\t * Furthermore, all non-overwriting tokens should be placed after the overwriting ones.\n\t\t\t *\n\t\t\t * @param {string} id The id of the language to extend. This has to be a key in `Prism.languages`.\n\t\t\t * @param {Grammar} redef The new tokens to append.\n\t\t\t * @returns {Grammar} The new language created.\n\t\t\t * @public\n\t\t\t * @example\n\t\t\t * Prism.languages['css-with-colors'] = Prism.languages.extend('css', {\n\t\t\t *     // Prism.languages.css already has a 'comment' token, so this token will overwrite CSS' 'comment' token\n\t\t\t *     // at its original position\n\t\t\t *     'comment': { ... },\n\t\t\t *     // CSS doesn't have a 'color' token, so this token will be appended\n\t\t\t *     'color': /\\b(?:red|green|blue)\\b/\n\t\t\t * });\n\t\t\t */\n\t\t\textend: function (id, redef) {\n\t\t\t\tvar lang = _.util.clone(_.languages[id]);\n\n\t\t\t\tfor (var key in redef) {\n\t\t\t\t\tlang[key] = redef[key];\n\t\t\t\t}\n\n\t\t\t\treturn lang;\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Inserts tokens _before_ another token in a language definition or any other grammar.\n\t\t\t *\n\t\t\t * ## Usage\n\t\t\t *\n\t\t\t * This helper method makes it easy to modify existing languages. For example, the CSS language definition\n\t\t\t * not only defines CSS highlighting for CSS documents, but also needs to define highlighting for CSS embedded\n\t\t\t * in HTML through `<style>` elements. To do this, it needs to modify `Prism.languages.markup` and add the\n\t\t\t * appropriate tokens. However, `Prism.languages.markup` is a regular JavaScript object literal, so if you do\n\t\t\t * this:\n\t\t\t *\n\t\t\t * ```js\n\t\t\t * Prism.languages.markup.style = {\n\t\t\t *     // token\n\t\t\t * };\n\t\t\t * ```\n\t\t\t *\n\t\t\t * then the `style` token will be added (and processed) at the end. `insertBefore` allows you to insert tokens\n\t\t\t * before existing tokens. For the CSS example above, you would use it like this:\n\t\t\t *\n\t\t\t * ```js\n\t\t\t * Prism.languages.insertBefore('markup', 'cdata', {\n\t\t\t *     'style': {\n\t\t\t *         // token\n\t\t\t *     }\n\t\t\t * });\n\t\t\t * ```\n\t\t\t *\n\t\t\t * ## Special cases\n\t\t\t *\n\t\t\t * If the grammars of `inside` and `insert` have tokens with the same name, the tokens in `inside`'s grammar\n\t\t\t * will be ignored.\n\t\t\t *\n\t\t\t * This behavior can be used to insert tokens after `before`:\n\t\t\t *\n\t\t\t * ```js\n\t\t\t * Prism.languages.insertBefore('markup', 'comment', {\n\t\t\t *     'comment': Prism.languages.markup.comment,\n\t\t\t *     // tokens after 'comment'\n\t\t\t * });\n\t\t\t * ```\n\t\t\t *\n\t\t\t * ## Limitations\n\t\t\t *\n\t\t\t * The main problem `insertBefore` has to solve is iteration order. Since ES2015, the iteration order for object\n\t\t\t * properties is guaranteed to be the insertion order (except for integer keys) but some browsers behave\n\t\t\t * differently when keys are deleted and re-inserted. So `insertBefore` can't be implemented by temporarily\n\t\t\t * deleting properties which is necessary to insert at arbitrary positions.\n\t\t\t *\n\t\t\t * To solve this problem, `insertBefore` doesn't actually insert the given tokens into the target object.\n\t\t\t * Instead, it will create a new object and replace all references to the target object with the new one. This\n\t\t\t * can be done without temporarily deleting properties, so the iteration order is well-defined.\n\t\t\t *\n\t\t\t * However, only references that can be reached from `Prism.languages` or `insert` will be replaced. I.e. if\n\t\t\t * you hold the target object in a variable, then the value of the variable will not change.\n\t\t\t *\n\t\t\t * ```js\n\t\t\t * var oldMarkup = Prism.languages.markup;\n\t\t\t * var newMarkup = Prism.languages.insertBefore('markup', 'comment', { ... });\n\t\t\t *\n\t\t\t * assert(oldMarkup !== Prism.languages.markup);\n\t\t\t * assert(newMarkup === Prism.languages.markup);\n\t\t\t * ```\n\t\t\t *\n\t\t\t * @param {string} inside The property of `root` (e.g. a language id in `Prism.languages`) that contains the\n\t\t\t * object to be modified.\n\t\t\t * @param {string} before The key to insert before.\n\t\t\t * @param {Grammar} insert An object containing the key-value pairs to be inserted.\n\t\t\t * @param {Object<string, any>} [root] The object containing `inside`, i.e. the object that contains the\n\t\t\t * object to be modified.\n\t\t\t *\n\t\t\t * Defaults to `Prism.languages`.\n\t\t\t * @returns {Grammar} The new grammar object.\n\t\t\t * @public\n\t\t\t */\n\t\t\tinsertBefore: function (inside, before, insert, root) {\n\t\t\t\troot = root || /** @type {any} */ (_.languages);\n\t\t\t\tvar grammar = root[inside];\n\t\t\t\t/** @type {Grammar} */\n\t\t\t\tvar ret = {};\n\n\t\t\t\tfor (var token in grammar) {\n\t\t\t\t\tif (grammar.hasOwnProperty(token)) {\n\n\t\t\t\t\t\tif (token == before) {\n\t\t\t\t\t\t\tfor (var newToken in insert) {\n\t\t\t\t\t\t\t\tif (insert.hasOwnProperty(newToken)) {\n\t\t\t\t\t\t\t\t\tret[newToken] = insert[newToken];\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Do not insert token which also occur in insert. See #1525\n\t\t\t\t\t\tif (!insert.hasOwnProperty(token)) {\n\t\t\t\t\t\t\tret[token] = grammar[token];\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tvar old = root[inside];\n\t\t\t\troot[inside] = ret;\n\n\t\t\t\t// Update references in other language definitions\n\t\t\t\t_.languages.DFS(_.languages, function (key, value) {\n\t\t\t\t\tif (value === old && key != inside) {\n\t\t\t\t\t\tthis[key] = ret;\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\treturn ret;\n\t\t\t},\n\n\t\t\t// Traverse a language definition with Depth First Search\n\t\t\tDFS: function DFS(o, callback, type, visited) {\n\t\t\t\tvisited = visited || {};\n\n\t\t\t\tvar objId = _.util.objId;\n\n\t\t\t\tfor (var i in o) {\n\t\t\t\t\tif (o.hasOwnProperty(i)) {\n\t\t\t\t\t\tcallback.call(o, i, o[i], type || i);\n\n\t\t\t\t\t\tvar property = o[i];\n\t\t\t\t\t\tvar propertyType = _.util.type(property);\n\n\t\t\t\t\t\tif (propertyType === 'Object' && !visited[objId(property)]) {\n\t\t\t\t\t\t\tvisited[objId(property)] = true;\n\t\t\t\t\t\t\tDFS(property, callback, null, visited);\n\t\t\t\t\t\t} else if (propertyType === 'Array' && !visited[objId(property)]) {\n\t\t\t\t\t\t\tvisited[objId(property)] = true;\n\t\t\t\t\t\t\tDFS(property, callback, i, visited);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\tplugins: {},\n\n\t\t/**\n\t\t * This is the most high-level function in Prism’s API.\n\t\t * It fetches all the elements that have a `.language-xxxx` class and then calls {@link Prism.highlightElement} on\n\t\t * each one of them.\n\t\t *\n\t\t * This is equivalent to `Prism.highlightAllUnder(document, async, callback)`.\n\t\t *\n\t\t * @param {boolean} [async=false] Same as in {@link Prism.highlightAllUnder}.\n\t\t * @param {HighlightCallback} [callback] Same as in {@link Prism.highlightAllUnder}.\n\t\t * @memberof Prism\n\t\t * @public\n\t\t */\n\t\thighlightAll: function (async, callback) {\n\t\t\t_.highlightAllUnder(document, async, callback);\n\t\t},\n\n\t\t/**\n\t\t * Fetches all the descendants of `container` that have a `.language-xxxx` class and then calls\n\t\t * {@link Prism.highlightElement} on each one of them.\n\t\t *\n\t\t * The following hooks will be run:\n\t\t * 1. `before-highlightall`\n\t\t * 2. `before-all-elements-highlight`\n\t\t * 3. All hooks of {@link Prism.highlightElement} for each element.\n\t\t *\n\t\t * @param {ParentNode} container The root element, whose descendants that have a `.language-xxxx` class will be highlighted.\n\t\t * @param {boolean} [async=false] Whether each element is to be highlighted asynchronously using Web Workers.\n\t\t * @param {HighlightCallback} [callback] An optional callback to be invoked on each element after its highlighting is done.\n\t\t * @memberof Prism\n\t\t * @public\n\t\t */\n\t\thighlightAllUnder: function (container, async, callback) {\n\t\t\tvar env = {\n\t\t\t\tcallback: callback,\n\t\t\t\tcontainer: container,\n\t\t\t\tselector: 'code[class*=\"language-\"], [class*=\"language-\"] code, code[class*=\"lang-\"], [class*=\"lang-\"] code'\n\t\t\t};\n\n\t\t\t_.hooks.run('before-highlightall', env);\n\n\t\t\tenv.elements = Array.prototype.slice.apply(env.container.querySelectorAll(env.selector));\n\n\t\t\t_.hooks.run('before-all-elements-highlight', env);\n\n\t\t\tfor (var i = 0, element; (element = env.elements[i++]);) {\n\t\t\t\t_.highlightElement(element, async === true, env.callback);\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * Highlights the code inside a single element.\n\t\t *\n\t\t * The following hooks will be run:\n\t\t * 1. `before-sanity-check`\n\t\t * 2. `before-highlight`\n\t\t * 3. All hooks of {@link Prism.highlight}. These hooks will be run by an asynchronous worker if `async` is `true`.\n\t\t * 4. `before-insert`\n\t\t * 5. `after-highlight`\n\t\t * 6. `complete`\n\t\t *\n\t\t * Some the above hooks will be skipped if the element doesn't contain any text or there is no grammar loaded for\n\t\t * the element's language.\n\t\t *\n\t\t * @param {Element} element The element containing the code.\n\t\t * It must have a class of `language-xxxx` to be processed, where `xxxx` is a valid language identifier.\n\t\t * @param {boolean} [async=false] Whether the element is to be highlighted asynchronously using Web Workers\n\t\t * to improve performance and avoid blocking the UI when highlighting very large chunks of code. This option is\n\t\t * [disabled by default](https://prismjs.com/faq.html#why-is-asynchronous-highlighting-disabled-by-default).\n\t\t *\n\t\t * Note: All language definitions required to highlight the code must be included in the main `prism.js` file for\n\t\t * asynchronous highlighting to work. You can build your own bundle on the\n\t\t * [Download page](https://prismjs.com/download.html).\n\t\t * @param {HighlightCallback} [callback] An optional callback to be invoked after the highlighting is done.\n\t\t * Mostly useful when `async` is `true`, since in that case, the highlighting is done asynchronously.\n\t\t * @memberof Prism\n\t\t * @public\n\t\t */\n\t\thighlightElement: function (element, async, callback) {\n\t\t\t// Find language\n\t\t\tvar language = _.util.getLanguage(element);\n\t\t\tvar grammar = _.languages[language];\n\n\t\t\t// Set language on the element, if not present\n\t\t\telement.className = element.className.replace(lang, '').replace(/\\s+/g, ' ') + ' language-' + language;\n\n\t\t\t// Set language on the parent, for styling\n\t\t\tvar parent = element.parentElement;\n\t\t\tif (parent && parent.nodeName.toLowerCase() === 'pre') {\n\t\t\t\tparent.className = parent.className.replace(lang, '').replace(/\\s+/g, ' ') + ' language-' + language;\n\t\t\t}\n\n\t\t\tvar code = element.textContent;\n\n\t\t\tvar env = {\n\t\t\t\telement: element,\n\t\t\t\tlanguage: language,\n\t\t\t\tgrammar: grammar,\n\t\t\t\tcode: code\n\t\t\t};\n\n\t\t\tfunction insertHighlightedCode(highlightedCode) {\n\t\t\t\tenv.highlightedCode = highlightedCode;\n\n\t\t\t\t_.hooks.run('before-insert', env);\n\n\t\t\t\tenv.element.innerHTML = env.highlightedCode;\n\n\t\t\t\t_.hooks.run('after-highlight', env);\n\t\t\t\t_.hooks.run('complete', env);\n\t\t\t\tcallback && callback.call(env.element);\n\t\t\t}\n\n\t\t\t_.hooks.run('before-sanity-check', env);\n\n\t\t\t// plugins may change/add the parent/element\n\t\t\tparent = env.element.parentElement;\n\t\t\tif (parent && parent.nodeName.toLowerCase() === 'pre' && !parent.hasAttribute('tabindex')) {\n\t\t\t\tparent.setAttribute('tabindex', '0');\n\t\t\t}\n\n\t\t\tif (!env.code) {\n\t\t\t\t_.hooks.run('complete', env);\n\t\t\t\tcallback && callback.call(env.element);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t_.hooks.run('before-highlight', env);\n\n\t\t\tif (!env.grammar) {\n\t\t\t\tinsertHighlightedCode(_.util.encode(env.code));\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (async && _self.Worker) {\n\t\t\t\tvar worker = new Worker(_.filename);\n\n\t\t\t\tworker.onmessage = function (evt) {\n\t\t\t\t\tinsertHighlightedCode(evt.data);\n\t\t\t\t};\n\n\t\t\t\tworker.postMessage(JSON.stringify({\n\t\t\t\t\tlanguage: env.language,\n\t\t\t\t\tcode: env.code,\n\t\t\t\t\timmediateClose: true\n\t\t\t\t}));\n\t\t\t} else {\n\t\t\t\tinsertHighlightedCode(_.highlight(env.code, env.grammar, env.language));\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * Low-level function, only use if you know what you’re doing. It accepts a string of text as input\n\t\t * and the language definitions to use, and returns a string with the HTML produced.\n\t\t *\n\t\t * The following hooks will be run:\n\t\t * 1. `before-tokenize`\n\t\t * 2. `after-tokenize`\n\t\t * 3. `wrap`: On each {@link Token}.\n\t\t *\n\t\t * @param {string} text A string with the code to be highlighted.\n\t\t * @param {Grammar} grammar An object containing the tokens to use.\n\t\t *\n\t\t * Usually a language definition like `Prism.languages.markup`.\n\t\t * @param {string} language The name of the language definition passed to `grammar`.\n\t\t * @returns {string} The highlighted HTML.\n\t\t * @memberof Prism\n\t\t * @public\n\t\t * @example\n\t\t * Prism.highlight('var foo = true;', Prism.languages.javascript, 'javascript');\n\t\t */\n\t\thighlight: function (text, grammar, language) {\n\t\t\tvar env = {\n\t\t\t\tcode: text,\n\t\t\t\tgrammar: grammar,\n\t\t\t\tlanguage: language\n\t\t\t};\n\t\t\t_.hooks.run('before-tokenize', env);\n\t\t\tenv.tokens = _.tokenize(env.code, env.grammar);\n\t\t\t_.hooks.run('after-tokenize', env);\n\t\t\treturn Token.stringify(_.util.encode(env.tokens), env.language);\n\t\t},\n\n\t\t/**\n\t\t * This is the heart of Prism, and the most low-level function you can use. It accepts a string of text as input\n\t\t * and the language definitions to use, and returns an array with the tokenized code.\n\t\t *\n\t\t * When the language definition includes nested tokens, the function is called recursively on each of these tokens.\n\t\t *\n\t\t * This method could be useful in other contexts as well, as a very crude parser.\n\t\t *\n\t\t * @param {string} text A string with the code to be highlighted.\n\t\t * @param {Grammar} grammar An object containing the tokens to use.\n\t\t *\n\t\t * Usually a language definition like `Prism.languages.markup`.\n\t\t * @returns {TokenStream} An array of strings and tokens, a token stream.\n\t\t * @memberof Prism\n\t\t * @public\n\t\t * @example\n\t\t * let code = `var foo = 0;`;\n\t\t * let tokens = Prism.tokenize(code, Prism.languages.javascript);\n\t\t * tokens.forEach(token => {\n\t\t *     if (token instanceof Prism.Token && token.type === 'number') {\n\t\t *         console.log(`Found numeric literal: ${token.content}`);\n\t\t *     }\n\t\t * });\n\t\t */\n\t\ttokenize: function (text, grammar) {\n\t\t\tvar rest = grammar.rest;\n\t\t\tif (rest) {\n\t\t\t\tfor (var token in rest) {\n\t\t\t\t\tgrammar[token] = rest[token];\n\t\t\t\t}\n\n\t\t\t\tdelete grammar.rest;\n\t\t\t}\n\n\t\t\tvar tokenList = new LinkedList();\n\t\t\taddAfter(tokenList, tokenList.head, text);\n\n\t\t\tmatchGrammar(text, tokenList, grammar, tokenList.head, 0);\n\n\t\t\treturn toArray(tokenList);\n\t\t},\n\n\t\t/**\n\t\t * @namespace\n\t\t * @memberof Prism\n\t\t * @public\n\t\t */\n\t\thooks: {\n\t\t\tall: {},\n\n\t\t\t/**\n\t\t\t * Adds the given callback to the list of callbacks for the given hook.\n\t\t\t *\n\t\t\t * The callback will be invoked when the hook it is registered for is run.\n\t\t\t * Hooks are usually directly run by a highlight function but you can also run hooks yourself.\n\t\t\t *\n\t\t\t * One callback function can be registered to multiple hooks and the same hook multiple times.\n\t\t\t *\n\t\t\t * @param {string} name The name of the hook.\n\t\t\t * @param {HookCallback} callback The callback function which is given environment variables.\n\t\t\t * @public\n\t\t\t */\n\t\t\tadd: function (name, callback) {\n\t\t\t\tvar hooks = _.hooks.all;\n\n\t\t\t\thooks[name] = hooks[name] || [];\n\n\t\t\t\thooks[name].push(callback);\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Runs a hook invoking all registered callbacks with the given environment variables.\n\t\t\t *\n\t\t\t * Callbacks will be invoked synchronously and in the order in which they were registered.\n\t\t\t *\n\t\t\t * @param {string} name The name of the hook.\n\t\t\t * @param {Object<string, any>} env The environment variables of the hook passed to all callbacks registered.\n\t\t\t * @public\n\t\t\t */\n\t\t\trun: function (name, env) {\n\t\t\t\tvar callbacks = _.hooks.all[name];\n\n\t\t\t\tif (!callbacks || !callbacks.length) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tfor (var i = 0, callback; (callback = callbacks[i++]);) {\n\t\t\t\t\tcallback(env);\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\tToken: Token\n\t};\n\t_self.Prism = _;\n\n\n\t// Typescript note:\n\t// The following can be used to import the Token type in JSDoc:\n\t//\n\t//   @typedef {InstanceType<import(\"./prism-core\")[\"Token\"]>} Token\n\n\t/**\n\t * Creates a new token.\n\t *\n\t * @param {string} type See {@link Token#type type}\n\t * @param {string | TokenStream} content See {@link Token#content content}\n\t * @param {string|string[]} [alias] The alias(es) of the token.\n\t * @param {string} [matchedStr=\"\"] A copy of the full string this token was created from.\n\t * @class\n\t * @global\n\t * @public\n\t */\n\tfunction Token(type, content, alias, matchedStr) {\n\t\t/**\n\t\t * The type of the token.\n\t\t *\n\t\t * This is usually the key of a pattern in a {@link Grammar}.\n\t\t *\n\t\t * @type {string}\n\t\t * @see GrammarToken\n\t\t * @public\n\t\t */\n\t\tthis.type = type;\n\t\t/**\n\t\t * The strings or tokens contained by this token.\n\t\t *\n\t\t * This will be a token stream if the pattern matched also defined an `inside` grammar.\n\t\t *\n\t\t * @type {string | TokenStream}\n\t\t * @public\n\t\t */\n\t\tthis.content = content;\n\t\t/**\n\t\t * The alias(es) of the token.\n\t\t *\n\t\t * @type {string|string[]}\n\t\t * @see GrammarToken\n\t\t * @public\n\t\t */\n\t\tthis.alias = alias;\n\t\t// Copy of the full string this token was created from\n\t\tthis.length = (matchedStr || '').length | 0;\n\t}\n\n\t/**\n\t * A token stream is an array of strings and {@link Token Token} objects.\n\t *\n\t * Token streams have to fulfill a few properties that are assumed by most functions (mostly internal ones) that process\n\t * them.\n\t *\n\t * 1. No adjacent strings.\n\t * 2. No empty strings.\n\t *\n\t *    The only exception here is the token stream that only contains the empty string and nothing else.\n\t *\n\t * @typedef {Array<string | Token>} TokenStream\n\t * @global\n\t * @public\n\t */\n\n\t/**\n\t * Converts the given token or token stream to an HTML representation.\n\t *\n\t * The following hooks will be run:\n\t * 1. `wrap`: On each {@link Token}.\n\t *\n\t * @param {string | Token | TokenStream} o The token or token stream to be converted.\n\t * @param {string} language The name of current language.\n\t * @returns {string} The HTML representation of the token or token stream.\n\t * @memberof Token\n\t * @static\n\t */\n\tToken.stringify = function stringify(o, language) {\n\t\tif (typeof o == 'string') {\n\t\t\treturn o;\n\t\t}\n\t\tif (Array.isArray(o)) {\n\t\t\tvar s = '';\n\t\t\to.forEach(function (e) {\n\t\t\t\ts += stringify(e, language);\n\t\t\t});\n\t\t\treturn s;\n\t\t}\n\n\t\tvar env = {\n\t\t\ttype: o.type,\n\t\t\tcontent: stringify(o.content, language),\n\t\t\ttag: 'span',\n\t\t\tclasses: ['token', o.type],\n\t\t\tattributes: {},\n\t\t\tlanguage: language\n\t\t};\n\n\t\tvar aliases = o.alias;\n\t\tif (aliases) {\n\t\t\tif (Array.isArray(aliases)) {\n\t\t\t\tArray.prototype.push.apply(env.classes, aliases);\n\t\t\t} else {\n\t\t\t\tenv.classes.push(aliases);\n\t\t\t}\n\t\t}\n\n\t\t_.hooks.run('wrap', env);\n\n\t\tvar attributes = '';\n\t\tfor (var name in env.attributes) {\n\t\t\tattributes += ' ' + name + '=\"' + (env.attributes[name] || '').replace(/\"/g, '&quot;') + '\"';\n\t\t}\n\n\t\treturn '<' + env.tag + ' class=\"' + env.classes.join(' ') + '\"' + attributes + '>' + env.content + '</' + env.tag + '>';\n\t};\n\n\t/**\n\t * @param {RegExp} pattern\n\t * @param {number} pos\n\t * @param {string} text\n\t * @param {boolean} lookbehind\n\t * @returns {RegExpExecArray | null}\n\t */\n\tfunction matchPattern(pattern, pos, text, lookbehind) {\n\t\tpattern.lastIndex = pos;\n\t\tvar match = pattern.exec(text);\n\t\tif (match && lookbehind && match[1]) {\n\t\t\t// change the match to remove the text matched by the Prism lookbehind group\n\t\t\tvar lookbehindLength = match[1].length;\n\t\t\tmatch.index += lookbehindLength;\n\t\t\tmatch[0] = match[0].slice(lookbehindLength);\n\t\t}\n\t\treturn match;\n\t}\n\n\t/**\n\t * @param {string} text\n\t * @param {LinkedList<string | Token>} tokenList\n\t * @param {any} grammar\n\t * @param {LinkedListNode<string | Token>} startNode\n\t * @param {number} startPos\n\t * @param {RematchOptions} [rematch]\n\t * @returns {void}\n\t * @private\n\t *\n\t * @typedef RematchOptions\n\t * @property {string} cause\n\t * @property {number} reach\n\t */\n\tfunction matchGrammar(text, tokenList, grammar, startNode, startPos, rematch) {\n\t\tfor (var token in grammar) {\n\t\t\tif (!grammar.hasOwnProperty(token) || !grammar[token]) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tvar patterns = grammar[token];\n\t\t\tpatterns = Array.isArray(patterns) ? patterns : [patterns];\n\n\t\t\tfor (var j = 0; j < patterns.length; ++j) {\n\t\t\t\tif (rematch && rematch.cause == token + ',' + j) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tvar patternObj = patterns[j];\n\t\t\t\tvar inside = patternObj.inside;\n\t\t\t\tvar lookbehind = !!patternObj.lookbehind;\n\t\t\t\tvar greedy = !!patternObj.greedy;\n\t\t\t\tvar alias = patternObj.alias;\n\n\t\t\t\tif (greedy && !patternObj.pattern.global) {\n\t\t\t\t\t// Without the global flag, lastIndex won't work\n\t\t\t\t\tvar flags = patternObj.pattern.toString().match(/[imsuy]*$/)[0];\n\t\t\t\t\tpatternObj.pattern = RegExp(patternObj.pattern.source, flags + 'g');\n\t\t\t\t}\n\n\t\t\t\t/** @type {RegExp} */\n\t\t\t\tvar pattern = patternObj.pattern || patternObj;\n\n\t\t\t\tfor ( // iterate the token list and keep track of the current token/string position\n\t\t\t\t\tvar currentNode = startNode.next, pos = startPos;\n\t\t\t\t\tcurrentNode !== tokenList.tail;\n\t\t\t\t\tpos += currentNode.value.length, currentNode = currentNode.next\n\t\t\t\t) {\n\n\t\t\t\t\tif (rematch && pos >= rematch.reach) {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\n\t\t\t\t\tvar str = currentNode.value;\n\n\t\t\t\t\tif (tokenList.length > text.length) {\n\t\t\t\t\t\t// Something went terribly wrong, ABORT, ABORT!\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (str instanceof Token) {\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\n\t\t\t\t\tvar removeCount = 1; // this is the to parameter of removeBetween\n\t\t\t\t\tvar match;\n\n\t\t\t\t\tif (greedy) {\n\t\t\t\t\t\tmatch = matchPattern(pattern, pos, text, lookbehind);\n\t\t\t\t\t\tif (!match) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tvar from = match.index;\n\t\t\t\t\t\tvar to = match.index + match[0].length;\n\t\t\t\t\t\tvar p = pos;\n\n\t\t\t\t\t\t// find the node that contains the match\n\t\t\t\t\t\tp += currentNode.value.length;\n\t\t\t\t\t\twhile (from >= p) {\n\t\t\t\t\t\t\tcurrentNode = currentNode.next;\n\t\t\t\t\t\t\tp += currentNode.value.length;\n\t\t\t\t\t\t}\n\t\t\t\t\t\t// adjust pos (and p)\n\t\t\t\t\t\tp -= currentNode.value.length;\n\t\t\t\t\t\tpos = p;\n\n\t\t\t\t\t\t// the current node is a Token, then the match starts inside another Token, which is invalid\n\t\t\t\t\t\tif (currentNode.value instanceof Token) {\n\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// find the last node which is affected by this match\n\t\t\t\t\t\tfor (\n\t\t\t\t\t\t\tvar k = currentNode;\n\t\t\t\t\t\t\tk !== tokenList.tail && (p < to || typeof k.value === 'string');\n\t\t\t\t\t\t\tk = k.next\n\t\t\t\t\t\t) {\n\t\t\t\t\t\t\tremoveCount++;\n\t\t\t\t\t\t\tp += k.value.length;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tremoveCount--;\n\n\t\t\t\t\t\t// replace with the new match\n\t\t\t\t\t\tstr = text.slice(pos, p);\n\t\t\t\t\t\tmatch.index -= pos;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tmatch = matchPattern(pattern, 0, str, lookbehind);\n\t\t\t\t\t\tif (!match) {\n\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t// eslint-disable-next-line no-redeclare\n\t\t\t\t\tvar from = match.index;\n\t\t\t\t\tvar matchStr = match[0];\n\t\t\t\t\tvar before = str.slice(0, from);\n\t\t\t\t\tvar after = str.slice(from + matchStr.length);\n\n\t\t\t\t\tvar reach = pos + str.length;\n\t\t\t\t\tif (rematch && reach > rematch.reach) {\n\t\t\t\t\t\trematch.reach = reach;\n\t\t\t\t\t}\n\n\t\t\t\t\tvar removeFrom = currentNode.prev;\n\n\t\t\t\t\tif (before) {\n\t\t\t\t\t\tremoveFrom = addAfter(tokenList, removeFrom, before);\n\t\t\t\t\t\tpos += before.length;\n\t\t\t\t\t}\n\n\t\t\t\t\tremoveRange(tokenList, removeFrom, removeCount);\n\n\t\t\t\t\tvar wrapped = new Token(token, inside ? _.tokenize(matchStr, inside) : matchStr, alias, matchStr);\n\t\t\t\t\tcurrentNode = addAfter(tokenList, removeFrom, wrapped);\n\n\t\t\t\t\tif (after) {\n\t\t\t\t\t\taddAfter(tokenList, currentNode, after);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (removeCount > 1) {\n\t\t\t\t\t\t// at least one Token object was removed, so we have to do some rematching\n\t\t\t\t\t\t// this can only happen if the current pattern is greedy\n\n\t\t\t\t\t\t/** @type {RematchOptions} */\n\t\t\t\t\t\tvar nestedRematch = {\n\t\t\t\t\t\t\tcause: token + ',' + j,\n\t\t\t\t\t\t\treach: reach\n\t\t\t\t\t\t};\n\t\t\t\t\t\tmatchGrammar(text, tokenList, grammar, currentNode.prev, pos, nestedRematch);\n\n\t\t\t\t\t\t// the reach might have been extended because of the rematching\n\t\t\t\t\t\tif (rematch && nestedRematch.reach > rematch.reach) {\n\t\t\t\t\t\t\trematch.reach = nestedRematch.reach;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * @typedef LinkedListNode\n\t * @property {T} value\n\t * @property {LinkedListNode<T> | null} prev The previous node.\n\t * @property {LinkedListNode<T> | null} next The next node.\n\t * @template T\n\t * @private\n\t */\n\n\t/**\n\t * @template T\n\t * @private\n\t */\n\tfunction LinkedList() {\n\t\t/** @type {LinkedListNode<T>} */\n\t\tvar head = { value: null, prev: null, next: null };\n\t\t/** @type {LinkedListNode<T>} */\n\t\tvar tail = { value: null, prev: head, next: null };\n\t\thead.next = tail;\n\n\t\t/** @type {LinkedListNode<T>} */\n\t\tthis.head = head;\n\t\t/** @type {LinkedListNode<T>} */\n\t\tthis.tail = tail;\n\t\tthis.length = 0;\n\t}\n\n\t/**\n\t * Adds a new node with the given value to the list.\n\t *\n\t * @param {LinkedList<T>} list\n\t * @param {LinkedListNode<T>} node\n\t * @param {T} value\n\t * @returns {LinkedListNode<T>} The added node.\n\t * @template T\n\t */\n\tfunction addAfter(list, node, value) {\n\t\t// assumes that node != list.tail && values.length >= 0\n\t\tvar next = node.next;\n\n\t\tvar newNode = { value: value, prev: node, next: next };\n\t\tnode.next = newNode;\n\t\tnext.prev = newNode;\n\t\tlist.length++;\n\n\t\treturn newNode;\n\t}\n\t/**\n\t * Removes `count` nodes after the given node. The given node will not be removed.\n\t *\n\t * @param {LinkedList<T>} list\n\t * @param {LinkedListNode<T>} node\n\t * @param {number} count\n\t * @template T\n\t */\n\tfunction removeRange(list, node, count) {\n\t\tvar next = node.next;\n\t\tfor (var i = 0; i < count && next !== list.tail; i++) {\n\t\t\tnext = next.next;\n\t\t}\n\t\tnode.next = next;\n\t\tnext.prev = node;\n\t\tlist.length -= i;\n\t}\n\t/**\n\t * @param {LinkedList<T>} list\n\t * @returns {T[]}\n\t * @template T\n\t */\n\tfunction toArray(list) {\n\t\tvar array = [];\n\t\tvar node = list.head.next;\n\t\twhile (node !== list.tail) {\n\t\t\tarray.push(node.value);\n\t\t\tnode = node.next;\n\t\t}\n\t\treturn array;\n\t}\n\n\n\tif (!_self.document) {\n\t\tif (!_self.addEventListener) {\n\t\t\t// in Node.js\n\t\t\treturn _;\n\t\t}\n\n\t\tif (!_.disableWorkerMessageHandler) {\n\t\t\t// In worker\n\t\t\t_self.addEventListener('message', function (evt) {\n\t\t\t\tvar message = JSON.parse(evt.data);\n\t\t\t\tvar lang = message.language;\n\t\t\t\tvar code = message.code;\n\t\t\t\tvar immediateClose = message.immediateClose;\n\n\t\t\t\t_self.postMessage(_.highlight(code, _.languages[lang], lang));\n\t\t\t\tif (immediateClose) {\n\t\t\t\t\t_self.close();\n\t\t\t\t}\n\t\t\t}, false);\n\t\t}\n\n\t\treturn _;\n\t}\n\n\t// Get current script and highlight\n\tvar script = _.util.currentScript();\n\n\tif (script) {\n\t\t_.filename = script.src;\n\n\t\tif (script.hasAttribute('data-manual')) {\n\t\t\t_.manual = true;\n\t\t}\n\t}\n\n\tfunction highlightAutomaticallyCallback() {\n\t\tif (!_.manual) {\n\t\t\t_.highlightAll();\n\t\t}\n\t}\n\n\tif (!_.manual) {\n\t\t// If the document state is \"loading\", then we'll use DOMContentLoaded.\n\t\t// If the document state is \"interactive\" and the prism.js script is deferred, then we'll also use the\n\t\t// DOMContentLoaded event because there might be some plugins or languages which have also been deferred and they\n\t\t// might take longer one animation frame to execute which can create a race condition where only some plugins have\n\t\t// been loaded when Prism.highlightAll() is executed, depending on how fast resources are loaded.\n\t\t// See https://github.com/PrismJS/prism/issues/2102\n\t\tvar readyState = document.readyState;\n\t\tif (readyState === 'loading' || readyState === 'interactive' && script && script.defer) {\n\t\t\tdocument.addEventListener('DOMContentLoaded', highlightAutomaticallyCallback);\n\t\t} else {\n\t\t\tif (window.requestAnimationFrame) {\n\t\t\t\twindow.requestAnimationFrame(highlightAutomaticallyCallback);\n\t\t\t} else {\n\t\t\t\twindow.setTimeout(highlightAutomaticallyCallback, 16);\n\t\t\t}\n\t\t}\n\t}\n\n\treturn _;\n\n}(_self));\n\nif (typeof module !== 'undefined' && module.exports) {\n\tmodule.exports = Prism;\n}\n\n// hack for components to work correctly in node.js\nif (typeof global !== 'undefined') {\n\tglobal.Prism = Prism;\n}\n\n// some additional documentation/types\n\n/**\n * The expansion of a simple `RegExp` literal to support additional properties.\n *\n * @typedef GrammarToken\n * @property {RegExp} pattern The regular expression of the token.\n * @property {boolean} [lookbehind=false] If `true`, then the first capturing group of `pattern` will (effectively)\n * behave as a lookbehind group meaning that the captured text will not be part of the matched text of the new token.\n * @property {boolean} [greedy=false] Whether the token is greedy.\n * @property {string|string[]} [alias] An optional alias or list of aliases.\n * @property {Grammar} [inside] The nested grammar of this token.\n *\n * The `inside` grammar will be used to tokenize the text value of each token of this kind.\n *\n * This can be used to make nested and even recursive language definitions.\n *\n * Note: This can cause infinite recursion. Be careful when you embed different languages or even the same language into\n * each another.\n * @global\n * @public\n */\n\n/**\n * @typedef Grammar\n * @type {Object<string, RegExp | GrammarToken | Array<RegExp | GrammarToken>>}\n * @property {Grammar} [rest] An optional grammar object that will be appended to this grammar.\n * @global\n * @public\n */\n\n/**\n * A function which will invoked after an element was successfully highlighted.\n *\n * @callback HighlightCallback\n * @param {Element} element The element successfully highlighted.\n * @returns {void}\n * @global\n * @public\n */\n\n/**\n * @callback HookCallback\n * @param {Object<string, any>} env The environment variables of the hook.\n * @returns {void}\n * @global\n * @public\n */\n\n\n/* **********************************************\n     Begin prism-markup.js\n********************************************** */\n\nPrism.languages.markup = {\n\t'comment': /<!--[\\s\\S]*?-->/,\n\t'prolog': /<\\?[\\s\\S]+?\\?>/,\n\t'doctype': {\n\t\t// https://www.w3.org/TR/xml/#NT-doctypedecl\n\t\tpattern: /<!DOCTYPE(?:[^>\"'[\\]]|\"[^\"]*\"|'[^']*')+(?:\\[(?:[^<\"'\\]]|\"[^\"]*\"|'[^']*'|<(?!!--)|<!--(?:[^-]|-(?!->))*-->)*\\]\\s*)?>/i,\n\t\tgreedy: true,\n\t\tinside: {\n\t\t\t'internal-subset': {\n\t\t\t\tpattern: /(^[^\\[]*\\[)[\\s\\S]+(?=\\]>$)/,\n\t\t\t\tlookbehind: true,\n\t\t\t\tgreedy: true,\n\t\t\t\tinside: null // see below\n\t\t\t},\n\t\t\t'string': {\n\t\t\t\tpattern: /\"[^\"]*\"|'[^']*'/,\n\t\t\t\tgreedy: true\n\t\t\t},\n\t\t\t'punctuation': /^<!|>$|[[\\]]/,\n\t\t\t'doctype-tag': /^DOCTYPE/,\n\t\t\t'name': /[^\\s<>'\"]+/\n\t\t}\n\t},\n\t'cdata': /<!\\[CDATA\\[[\\s\\S]*?\\]\\]>/i,\n\t'tag': {\n\t\tpattern: /<\\/?(?!\\d)[^\\s>\\/=$<%]+(?:\\s(?:\\s*[^\\s>\\/=]+(?:\\s*=\\s*(?:\"[^\"]*\"|'[^']*'|[^\\s'\">=]+(?=[\\s>]))|(?=[\\s/>])))+)?\\s*\\/?>/,\n\t\tgreedy: true,\n\t\tinside: {\n\t\t\t'tag': {\n\t\t\t\tpattern: /^<\\/?[^\\s>\\/]+/,\n\t\t\t\tinside: {\n\t\t\t\t\t'punctuation': /^<\\/?/,\n\t\t\t\t\t'namespace': /^[^\\s>\\/:]+:/\n\t\t\t\t}\n\t\t\t},\n\t\t\t'special-attr': [],\n\t\t\t'attr-value': {\n\t\t\t\tpattern: /=\\s*(?:\"[^\"]*\"|'[^']*'|[^\\s'\">=]+)/,\n\t\t\t\tinside: {\n\t\t\t\t\t'punctuation': [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tpattern: /^=/,\n\t\t\t\t\t\t\talias: 'attr-equals'\n\t\t\t\t\t\t},\n\t\t\t\t\t\t/\"|'/\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t},\n\t\t\t'punctuation': /\\/?>/,\n\t\t\t'attr-name': {\n\t\t\t\tpattern: /[^\\s>\\/]+/,\n\t\t\t\tinside: {\n\t\t\t\t\t'namespace': /^[^\\s>\\/:]+:/\n\t\t\t\t}\n\t\t\t}\n\n\t\t}\n\t},\n\t'entity': [\n\t\t{\n\t\t\tpattern: /&[\\da-z]{1,8};/i,\n\t\t\talias: 'named-entity'\n\t\t},\n\t\t/&#x?[\\da-f]{1,8};/i\n\t]\n};\n\nPrism.languages.markup['tag'].inside['attr-value'].inside['entity'] =\n\tPrism.languages.markup['entity'];\nPrism.languages.markup['doctype'].inside['internal-subset'].inside = Prism.languages.markup;\n\n// Plugin to make entity title show the real entity, idea by Roman Komarov\nPrism.hooks.add('wrap', function (env) {\n\n\tif (env.type === 'entity') {\n\t\tenv.attributes['title'] = env.content.replace(/&amp;/, '&');\n\t}\n});\n\nObject.defineProperty(Prism.languages.markup.tag, 'addInlined', {\n\t/**\n\t * Adds an inlined language to markup.\n\t *\n\t * An example of an inlined language is CSS with `<style>` tags.\n\t *\n\t * @param {string} tagName The name of the tag that contains the inlined language. This name will be treated as\n\t * case insensitive.\n\t * @param {string} lang The language key.\n\t * @example\n\t * addInlined('style', 'css');\n\t */\n\tvalue: function addInlined(tagName, lang) {\n\t\tvar includedCdataInside = {};\n\t\tincludedCdataInside['language-' + lang] = {\n\t\t\tpattern: /(^<!\\[CDATA\\[)[\\s\\S]+?(?=\\]\\]>$)/i,\n\t\t\tlookbehind: true,\n\t\t\tinside: Prism.languages[lang]\n\t\t};\n\t\tincludedCdataInside['cdata'] = /^<!\\[CDATA\\[|\\]\\]>$/i;\n\n\t\tvar inside = {\n\t\t\t'included-cdata': {\n\t\t\t\tpattern: /<!\\[CDATA\\[[\\s\\S]*?\\]\\]>/i,\n\t\t\t\tinside: includedCdataInside\n\t\t\t}\n\t\t};\n\t\tinside['language-' + lang] = {\n\t\t\tpattern: /[\\s\\S]+/,\n\t\t\tinside: Prism.languages[lang]\n\t\t};\n\n\t\tvar def = {};\n\t\tdef[tagName] = {\n\t\t\tpattern: RegExp(/(<__[^>]*>)(?:<!\\[CDATA\\[(?:[^\\]]|\\](?!\\]>))*\\]\\]>|(?!<!\\[CDATA\\[)[\\s\\S])*?(?=<\\/__>)/.source.replace(/__/g, function () { return tagName; }), 'i'),\n\t\t\tlookbehind: true,\n\t\t\tgreedy: true,\n\t\t\tinside: inside\n\t\t};\n\n\t\tPrism.languages.insertBefore('markup', 'cdata', def);\n\t}\n});\nObject.defineProperty(Prism.languages.markup.tag, 'addAttribute', {\n\t/**\n\t * Adds an pattern to highlight languages embedded in HTML attributes.\n\t *\n\t * An example of an inlined language is CSS with `style` attributes.\n\t *\n\t * @param {string} attrName The name of the tag that contains the inlined language. This name will be treated as\n\t * case insensitive.\n\t * @param {string} lang The language key.\n\t * @example\n\t * addAttribute('style', 'css');\n\t */\n\tvalue: function (attrName, lang) {\n\t\tPrism.languages.markup.tag.inside['special-attr'].push({\n\t\t\tpattern: RegExp(\n\t\t\t\t/(^|[\"'\\s])/.source + '(?:' + attrName + ')' + /\\s*=\\s*(?:\"[^\"]*\"|'[^']*'|[^\\s'\">=]+(?=[\\s>]))/.source,\n\t\t\t\t'i'\n\t\t\t),\n\t\t\tlookbehind: true,\n\t\t\tinside: {\n\t\t\t\t'attr-name': /^[^\\s=]+/,\n\t\t\t\t'attr-value': {\n\t\t\t\t\tpattern: /=[\\s\\S]+/,\n\t\t\t\t\tinside: {\n\t\t\t\t\t\t'value': {\n\t\t\t\t\t\t\tpattern: /(^=\\s*([\"']|(?![\"'])))\\S[\\s\\S]*(?=\\2$)/,\n\t\t\t\t\t\t\tlookbehind: true,\n\t\t\t\t\t\t\talias: [lang, 'language-' + lang],\n\t\t\t\t\t\t\tinside: Prism.languages[lang]\n\t\t\t\t\t\t},\n\t\t\t\t\t\t'punctuation': [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tpattern: /^=/,\n\t\t\t\t\t\t\t\talias: 'attr-equals'\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t/\"|'/\n\t\t\t\t\t\t]\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t}\n});\n\nPrism.languages.html = Prism.languages.markup;\nPrism.languages.mathml = Prism.languages.markup;\nPrism.languages.svg = Prism.languages.markup;\n\nPrism.languages.xml = Prism.languages.extend('markup', {});\nPrism.languages.ssml = Prism.languages.xml;\nPrism.languages.atom = Prism.languages.xml;\nPrism.languages.rss = Prism.languages.xml;\n\n\n/* **********************************************\n     Begin prism-css.js\n********************************************** */\n\n(function (Prism) {\n\n\tvar string = /(?:\"(?:\\\\(?:\\r\\n|[\\s\\S])|[^\"\\\\\\r\\n])*\"|'(?:\\\\(?:\\r\\n|[\\s\\S])|[^'\\\\\\r\\n])*')/;\n\n\tPrism.languages.css = {\n\t\t'comment': /\\/\\*[\\s\\S]*?\\*\\//,\n\t\t'atrule': {\n\t\t\tpattern: /@[\\w-](?:[^;{\\s]|\\s+(?![\\s{]))*(?:;|(?=\\s*\\{))/,\n\t\t\tinside: {\n\t\t\t\t'rule': /^@[\\w-]+/,\n\t\t\t\t'selector-function-argument': {\n\t\t\t\t\tpattern: /(\\bselector\\s*\\(\\s*(?![\\s)]))(?:[^()\\s]|\\s+(?![\\s)])|\\((?:[^()]|\\([^()]*\\))*\\))+(?=\\s*\\))/,\n\t\t\t\t\tlookbehind: true,\n\t\t\t\t\talias: 'selector'\n\t\t\t\t},\n\t\t\t\t'keyword': {\n\t\t\t\t\tpattern: /(^|[^\\w-])(?:and|not|only|or)(?![\\w-])/,\n\t\t\t\t\tlookbehind: true\n\t\t\t\t}\n\t\t\t\t// See rest below\n\t\t\t}\n\t\t},\n\t\t'url': {\n\t\t\t// https://drafts.csswg.org/css-values-3/#urls\n\t\t\tpattern: RegExp('\\\\burl\\\\((?:' + string.source + '|' + /(?:[^\\\\\\r\\n()\"']|\\\\[\\s\\S])*/.source + ')\\\\)', 'i'),\n\t\t\tgreedy: true,\n\t\t\tinside: {\n\t\t\t\t'function': /^url/i,\n\t\t\t\t'punctuation': /^\\(|\\)$/,\n\t\t\t\t'string': {\n\t\t\t\t\tpattern: RegExp('^' + string.source + '$'),\n\t\t\t\t\talias: 'url'\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t'selector': {\n\t\t\tpattern: RegExp('(^|[{}\\\\s])[^{}\\\\s](?:[^{};\"\\'\\\\s]|\\\\s+(?![\\\\s{])|' + string.source + ')*(?=\\\\s*\\\\{)'),\n\t\t\tlookbehind: true\n\t\t},\n\t\t'string': {\n\t\t\tpattern: string,\n\t\t\tgreedy: true\n\t\t},\n\t\t'property': {\n\t\t\tpattern: /(^|[^-\\w\\xA0-\\uFFFF])(?!\\s)[-_a-z\\xA0-\\uFFFF](?:(?!\\s)[-\\w\\xA0-\\uFFFF])*(?=\\s*:)/i,\n\t\t\tlookbehind: true\n\t\t},\n\t\t'important': /!important\\b/i,\n\t\t'function': {\n\t\t\tpattern: /(^|[^-a-z0-9])[-a-z0-9]+(?=\\()/i,\n\t\t\tlookbehind: true\n\t\t},\n\t\t'punctuation': /[(){};:,]/\n\t};\n\n\tPrism.languages.css['atrule'].inside.rest = Prism.languages.css;\n\n\tvar markup = Prism.languages.markup;\n\tif (markup) {\n\t\tmarkup.tag.addInlined('style', 'css');\n\t\tmarkup.tag.addAttribute('style', 'css');\n\t}\n\n}(Prism));\n\n\n/* **********************************************\n     Begin prism-clike.js\n********************************************** */\n\nPrism.languages.clike = {\n\t'comment': [\n\t\t{\n\t\t\tpattern: /(^|[^\\\\])\\/\\*[\\s\\S]*?(?:\\*\\/|$)/,\n\t\t\tlookbehind: true,\n\t\t\tgreedy: true\n\t\t},\n\t\t{\n\t\t\tpattern: /(^|[^\\\\:])\\/\\/.*/,\n\t\t\tlookbehind: true,\n\t\t\tgreedy: true\n\t\t}\n\t],\n\t'string': {\n\t\tpattern: /([\"'])(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1/,\n\t\tgreedy: true\n\t},\n\t'class-name': {\n\t\tpattern: /(\\b(?:class|interface|extends|implements|trait|instanceof|new)\\s+|\\bcatch\\s+\\()[\\w.\\\\]+/i,\n\t\tlookbehind: true,\n\t\tinside: {\n\t\t\t'punctuation': /[.\\\\]/\n\t\t}\n\t},\n\t'keyword': /\\b(?:if|else|while|do|for|return|in|instanceof|function|new|try|throw|catch|finally|null|break|continue)\\b/,\n\t'boolean': /\\b(?:true|false)\\b/,\n\t'function': /\\b\\w+(?=\\()/,\n\t'number': /\\b0x[\\da-f]+\\b|(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:e[+-]?\\d+)?/i,\n\t'operator': /[<>]=?|[!=]=?=?|--?|\\+\\+?|&&?|\\|\\|?|[?*/~^%]/,\n\t'punctuation': /[{}[\\];(),.:]/\n};\n\n\n/* **********************************************\n     Begin prism-javascript.js\n********************************************** */\n\nPrism.languages.javascript = Prism.languages.extend('clike', {\n\t'class-name': [\n\t\tPrism.languages.clike['class-name'],\n\t\t{\n\t\t\tpattern: /(^|[^$\\w\\xA0-\\uFFFF])(?!\\s)[_$A-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?=\\.(?:prototype|constructor))/,\n\t\t\tlookbehind: true\n\t\t}\n\t],\n\t'keyword': [\n\t\t{\n\t\t\tpattern: /((?:^|\\})\\s*)catch\\b/,\n\t\t\tlookbehind: true\n\t\t},\n\t\t{\n\t\t\tpattern: /(^|[^.]|\\.\\.\\.\\s*)\\b(?:as|assert(?=\\s*\\{)|async(?=\\s*(?:function\\b|\\(|[$\\w\\xA0-\\uFFFF]|$))|await|break|case|class|const|continue|debugger|default|delete|do|else|enum|export|extends|finally(?=\\s*(?:\\{|$))|for|from(?=\\s*(?:['\"]|$))|function|(?:get|set)(?=\\s*(?:[#\\[$\\w\\xA0-\\uFFFF]|$))|if|implements|import|in|instanceof|interface|let|new|null|of|package|private|protected|public|return|static|super|switch|this|throw|try|typeof|undefined|var|void|while|with|yield)\\b/,\n\t\t\tlookbehind: true\n\t\t},\n\t],\n\t// Allow for all non-ASCII characters (See http://stackoverflow.com/a/2008444)\n\t'function': /#?(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?=\\s*(?:\\.\\s*(?:apply|bind|call)\\s*)?\\()/,\n\t'number': /\\b(?:(?:0[xX](?:[\\dA-Fa-f](?:_[\\dA-Fa-f])?)+|0[bB](?:[01](?:_[01])?)+|0[oO](?:[0-7](?:_[0-7])?)+)n?|(?:\\d(?:_\\d)?)+n|NaN|Infinity)\\b|(?:\\b(?:\\d(?:_\\d)?)+\\.?(?:\\d(?:_\\d)?)*|\\B\\.(?:\\d(?:_\\d)?)+)(?:[Ee][+-]?(?:\\d(?:_\\d)?)+)?/,\n\t'operator': /--|\\+\\+|\\*\\*=?|=>|&&=?|\\|\\|=?|[!=]==|<<=?|>>>?=?|[-+*/%&|^!=<>]=?|\\.{3}|\\?\\?=?|\\?\\.?|[~:]/\n});\n\nPrism.languages.javascript['class-name'][0].pattern = /(\\b(?:class|interface|extends|implements|instanceof|new)\\s+)[\\w.\\\\]+/;\n\nPrism.languages.insertBefore('javascript', 'keyword', {\n\t'regex': {\n\t\t// eslint-disable-next-line regexp/no-dupe-characters-character-class\n\t\tpattern: /((?:^|[^$\\w\\xA0-\\uFFFF.\"'\\])\\s]|\\b(?:return|yield))\\s*)\\/(?:\\[(?:[^\\]\\\\\\r\\n]|\\\\.)*\\]|\\\\.|[^/\\\\\\[\\r\\n])+\\/[dgimyus]{0,7}(?=(?:\\s|\\/\\*(?:[^*]|\\*(?!\\/))*\\*\\/)*(?:$|[\\r\\n,.;:})\\]]|\\/\\/))/,\n\t\tlookbehind: true,\n\t\tgreedy: true,\n\t\tinside: {\n\t\t\t'regex-source': {\n\t\t\t\tpattern: /^(\\/)[\\s\\S]+(?=\\/[a-z]*$)/,\n\t\t\t\tlookbehind: true,\n\t\t\t\talias: 'language-regex',\n\t\t\t\tinside: Prism.languages.regex\n\t\t\t},\n\t\t\t'regex-delimiter': /^\\/|\\/$/,\n\t\t\t'regex-flags': /^[a-z]+$/,\n\t\t}\n\t},\n\t// This must be declared before keyword because we use \"function\" inside the look-forward\n\t'function-variable': {\n\t\tpattern: /#?(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?=\\s*[=:]\\s*(?:async\\s*)?(?:\\bfunction\\b|(?:\\((?:[^()]|\\([^()]*\\))*\\)|(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*)\\s*=>))/,\n\t\talias: 'function'\n\t},\n\t'parameter': [\n\t\t{\n\t\t\tpattern: /(function(?:\\s+(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*)?\\s*\\(\\s*)(?!\\s)(?:[^()\\s]|\\s+(?![\\s)])|\\([^()]*\\))+(?=\\s*\\))/,\n\t\t\tlookbehind: true,\n\t\t\tinside: Prism.languages.javascript\n\t\t},\n\t\t{\n\t\t\tpattern: /(^|[^$\\w\\xA0-\\uFFFF])(?!\\s)[_$a-z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?=\\s*=>)/i,\n\t\t\tlookbehind: true,\n\t\t\tinside: Prism.languages.javascript\n\t\t},\n\t\t{\n\t\t\tpattern: /(\\(\\s*)(?!\\s)(?:[^()\\s]|\\s+(?![\\s)])|\\([^()]*\\))+(?=\\s*\\)\\s*=>)/,\n\t\t\tlookbehind: true,\n\t\t\tinside: Prism.languages.javascript\n\t\t},\n\t\t{\n\t\t\tpattern: /((?:\\b|\\s|^)(?!(?:as|async|await|break|case|catch|class|const|continue|debugger|default|delete|do|else|enum|export|extends|finally|for|from|function|get|if|implements|import|in|instanceof|interface|let|new|null|of|package|private|protected|public|return|set|static|super|switch|this|throw|try|typeof|undefined|var|void|while|with|yield)(?![$\\w\\xA0-\\uFFFF]))(?:(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*\\s*)\\(\\s*|\\]\\s*\\(\\s*)(?!\\s)(?:[^()\\s]|\\s+(?![\\s)])|\\([^()]*\\))+(?=\\s*\\)\\s*\\{)/,\n\t\t\tlookbehind: true,\n\t\t\tinside: Prism.languages.javascript\n\t\t}\n\t],\n\t'constant': /\\b[A-Z](?:[A-Z_]|\\dx?)*\\b/\n});\n\nPrism.languages.insertBefore('javascript', 'string', {\n\t'hashbang': {\n\t\tpattern: /^#!.*/,\n\t\tgreedy: true,\n\t\talias: 'comment'\n\t},\n\t'template-string': {\n\t\tpattern: /`(?:\\\\[\\s\\S]|\\$\\{(?:[^{}]|\\{(?:[^{}]|\\{[^}]*\\})*\\})+\\}|(?!\\$\\{)[^\\\\`])*`/,\n\t\tgreedy: true,\n\t\tinside: {\n\t\t\t'template-punctuation': {\n\t\t\t\tpattern: /^`|`$/,\n\t\t\t\talias: 'string'\n\t\t\t},\n\t\t\t'interpolation': {\n\t\t\t\tpattern: /((?:^|[^\\\\])(?:\\\\{2})*)\\$\\{(?:[^{}]|\\{(?:[^{}]|\\{[^}]*\\})*\\})+\\}/,\n\t\t\t\tlookbehind: true,\n\t\t\t\tinside: {\n\t\t\t\t\t'interpolation-punctuation': {\n\t\t\t\t\t\tpattern: /^\\$\\{|\\}$/,\n\t\t\t\t\t\talias: 'punctuation'\n\t\t\t\t\t},\n\t\t\t\t\trest: Prism.languages.javascript\n\t\t\t\t}\n\t\t\t},\n\t\t\t'string': /[\\s\\S]+/\n\t\t}\n\t}\n});\n\nif (Prism.languages.markup) {\n\tPrism.languages.markup.tag.addInlined('script', 'javascript');\n\n\t// add attribute support for all DOM events.\n\t// https://developer.mozilla.org/en-US/docs/Web/Events#Standard_events\n\tPrism.languages.markup.tag.addAttribute(\n\t\t/on(?:abort|blur|change|click|composition(?:end|start|update)|dblclick|error|focus(?:in|out)?|key(?:down|up)|load|mouse(?:down|enter|leave|move|out|over|up)|reset|resize|scroll|select|slotchange|submit|unload|wheel)/.source,\n\t\t'javascript'\n\t);\n}\n\nPrism.languages.js = Prism.languages.javascript;\n\n\n/* **********************************************\n     Begin prism-file-highlight.js\n********************************************** */\n\n(function () {\n\n\tif (typeof Prism === 'undefined' || typeof document === 'undefined') {\n\t\treturn;\n\t}\n\n\t// https://developer.mozilla.org/en-US/docs/Web/API/Element/matches#Polyfill\n\tif (!Element.prototype.matches) {\n\t\tElement.prototype.matches = Element.prototype.msMatchesSelector || Element.prototype.webkitMatchesSelector;\n\t}\n\n\tvar LOADING_MESSAGE = 'Loading…';\n\tvar FAILURE_MESSAGE = function (status, message) {\n\t\treturn '✖ Error ' + status + ' while fetching file: ' + message;\n\t};\n\tvar FAILURE_EMPTY_MESSAGE = '✖ Error: File does not exist or is empty';\n\n\tvar EXTENSIONS = {\n\t\t'js': 'javascript',\n\t\t'py': 'python',\n\t\t'rb': 'ruby',\n\t\t'ps1': 'powershell',\n\t\t'psm1': 'powershell',\n\t\t'sh': 'bash',\n\t\t'bat': 'batch',\n\t\t'h': 'c',\n\t\t'tex': 'latex'\n\t};\n\n\tvar STATUS_ATTR = 'data-src-status';\n\tvar STATUS_LOADING = 'loading';\n\tvar STATUS_LOADED = 'loaded';\n\tvar STATUS_FAILED = 'failed';\n\n\tvar SELECTOR = 'pre[data-src]:not([' + STATUS_ATTR + '=\"' + STATUS_LOADED + '\"])'\n\t\t+ ':not([' + STATUS_ATTR + '=\"' + STATUS_LOADING + '\"])';\n\n\tvar lang = /\\blang(?:uage)?-([\\w-]+)\\b/i;\n\n\t/**\n\t * Sets the Prism `language-xxxx` or `lang-xxxx` class to the given language.\n\t *\n\t * @param {HTMLElement} element\n\t * @param {string} language\n\t * @returns {void}\n\t */\n\tfunction setLanguageClass(element, language) {\n\t\tvar className = element.className;\n\t\tclassName = className.replace(lang, ' ') + ' language-' + language;\n\t\telement.className = className.replace(/\\s+/g, ' ').trim();\n\t}\n\n\n\tPrism.hooks.add('before-highlightall', function (env) {\n\t\tenv.selector += ', ' + SELECTOR;\n\t});\n\n\tPrism.hooks.add('before-sanity-check', function (env) {\n\t\tvar pre = /** @type {HTMLPreElement} */ (env.element);\n\t\tif (pre.matches(SELECTOR)) {\n\t\t\tenv.code = ''; // fast-path the whole thing and go to complete\n\n\t\t\tpre.setAttribute(STATUS_ATTR, STATUS_LOADING); // mark as loading\n\n\t\t\t// add code element with loading message\n\t\t\tvar code = pre.appendChild(document.createElement('CODE'));\n\t\t\tcode.textContent = LOADING_MESSAGE;\n\n\t\t\tvar src = pre.getAttribute('data-src');\n\n\t\t\tvar language = env.language;\n\t\t\tif (language === 'none') {\n\t\t\t\t// the language might be 'none' because there is no language set;\n\t\t\t\t// in this case, we want to use the extension as the language\n\t\t\t\tvar extension = (/\\.(\\w+)$/.exec(src) || [, 'none'])[1];\n\t\t\t\tlanguage = EXTENSIONS[extension] || extension;\n\t\t\t}\n\n\t\t\t// set language classes\n\t\t\tsetLanguageClass(code, language);\n\t\t\tsetLanguageClass(pre, language);\n\n\t\t\t// preload the language\n\t\t\tvar autoloader = Prism.plugins.autoloader;\n\t\t\tif (autoloader) {\n\t\t\t\tautoloader.loadLanguages(language);\n\t\t\t}\n\n\t\t\t// load file\n\t\t\tvar xhr = new XMLHttpRequest();\n\t\t\txhr.open('GET', src, true);\n\t\t\txhr.onreadystatechange = function () {\n\t\t\t\tif (xhr.readyState == 4) {\n\t\t\t\t\tif (xhr.status < 400 && xhr.responseText) {\n\t\t\t\t\t\t// mark as loaded\n\t\t\t\t\t\tpre.setAttribute(STATUS_ATTR, STATUS_LOADED);\n\n\t\t\t\t\t\t// highlight code\n\t\t\t\t\t\tcode.textContent = xhr.responseText;\n\t\t\t\t\t\tPrism.highlightElement(code);\n\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// mark as failed\n\t\t\t\t\t\tpre.setAttribute(STATUS_ATTR, STATUS_FAILED);\n\n\t\t\t\t\t\tif (xhr.status >= 400) {\n\t\t\t\t\t\t\tcode.textContent = FAILURE_MESSAGE(xhr.status, xhr.statusText);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tcode.textContent = FAILURE_EMPTY_MESSAGE;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t};\n\t\t\txhr.send(null);\n\t\t}\n\t});\n\n\tPrism.plugins.fileHighlight = {\n\t\t/**\n\t\t * Executes the File Highlight plugin for all matching `pre` elements under the given container.\n\t\t *\n\t\t * Note: Elements which are already loaded or currently loading will not be touched by this method.\n\t\t *\n\t\t * @param {ParentNode} [container=document]\n\t\t */\n\t\thighlight: function highlight(container) {\n\t\t\tvar elements = (container || document).querySelectorAll(SELECTOR);\n\n\t\t\tfor (var i = 0, element; (element = elements[i++]);) {\n\t\t\t\tPrism.highlightElement(element);\n\t\t\t}\n\t\t}\n\t};\n\n\tvar logged = false;\n\t/** @deprecated Use `Prism.plugins.fileHighlight.highlight` instead. */\n\tPrism.fileHighlight = function () {\n\t\tif (!logged) {\n\t\t\tconsole.warn('Prism.fileHighlight is deprecated. Use `Prism.plugins.fileHighlight.highlight` instead.');\n\t\t\tlogged = true;\n\t\t}\n\t\tPrism.plugins.fileHighlight.highlight.apply(this, arguments);\n\t};\n\n}());\n","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../css-loader/dist/cjs.js!../../postcss-loader/src/index.js??ref--2-2!./prism-okaidia.css\");\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar add = require(\"!../../vue-style-loader/lib/addStylesClient.js\").default\nvar update = add(\"5522fe40\", content, true, {});"],"sourceRoot":""}