{"version":3,"sources":["webpack:///./src/client/app/common/views/pages/room/room.vue?37ae","webpack:///./src/client/app/common/views/pages/room/room.vue?adba","webpack:///./src/client/app/common/scripts/room/furnitures.json5","webpack:///./src/client/app/common/views/pages/room/room.vue?c474","webpack:///./src/client/app/common/scripts/room/room.ts","webpack:///./src/client/app/common/views/pages/room/preview.vue?e8d4","webpack:///./src/client/app/common/views/pages/room/preview.vue?c2fd","webpack:///./src/client/app/common/views/pages/room/preview.vue?d1ed","webpack:///./src/client/app/common/views/pages/room/preview.vue","webpack:///./src/client/app/common/views/pages/room/room.vue?f897","webpack:///./src/client/app/common/views/pages/room/room.vue?c989","webpack:///./src/client/app/common/views/pages/room/room.vue","webpack:///./src/client/app/common/views/pages/room/room.vue?b0a3"],"names":[],"mappings":";;;;;;;;;;AAAA;AACA,kCAAkC,mBAAO,CAAC,uHAAkE;AAC5G;AACA;AACA,cAAc,QAAS,2EAA2E,eAAe,UAAU,aAAa,uBAAuB,kBAAkB,wFAAwF,eAAe,gHAAgH,cAAc,8GAA8G,iBAAiB,0HAA0H,2CAA2C,uCAAuC,SAAS,UAAU,YAAY,qDAAqD,SAAS,iCAAiC,SAAS,WAAW,YAAY;AAC/3B;AACA;;;;;;;;;;;;;ACNA;;AAEA;AACA,cAAc,mBAAO,CAAC,y1BAAgf;AACtgB,4CAA4C,QAAS;AACrD;AACA;AACA,UAAU,mBAAO,CAAC,yIAA4E;AAC9F,+CAA+C;AAC/C;AACA,GAAG,KAAU,EAAE,E;;;;;;;;;;;;ACVf,mBAAmB,wBAAwB,EAAE,uBAAuB,EAAE,oCAAoC,cAAc,QAAQ,eAAe,EAAE,+BAA+B,cAAc,QAAQ,eAAe,EAAE,gCAAgC,cAAc,QAAQ,eAAe,EAAE,iCAAiC,8BAA8B,QAAQ,+BAA+B,EAAE,sBAAsB,EAAE,sBAAsB,EAAE,yBAAyB,EAAE,0BAA0B,EAAE,0BAA0B,EAAE,0BAA0B,EAAE,2BAA2B,EAAE,iCAAiC,EAAE,kCAAkC,EAAE,kCAAkC,EAAE,+BAA+B,cAAc,QAAQ,eAAe,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,iCAAiC,EAAE,0BAA0B,EAAE,wBAAwB,EAAE,4BAA4B,EAAE,mCAAmC,cAAc,QAAQ,aAAa,EAAE,kCAAkC,eAAe,UAAU,QAAQ,kBAAkB,mCAAmC,EAAE,6BAA6B,eAAe,UAAU,QAAQ,kBAAkB,mCAAmC,EAAE,4BAA4B,EAAE,wCAAwC,8BAA8B,QAAQ,2CAA2C,EAAE,8BAA8B,cAAc,QAAQ,aAAa,EAAE,oCAAoC,cAAc,QAAQ,cAAc,EAAE,6BAA6B,EAAE,+BAA+B,cAAc,QAAQ,cAAc,EAAE,oCAAoC,4BAA4B,UAAU,OAAO,iBAAiB,kCAAkC,QAAQ,eAAe,EAAE,kCAAkC,2BAA2B,QAAQ,2BAA2B,EAAE,8BAA8B,EAAE,kCAAkC,gBAAgB,UAAU,QAAQ,mBAAmB,mCAAmC,EAAE,kCAAkC,gBAAgB,UAAU,QAAQ,mBAAmB,iCAAiC,EAAE,+BAA+B,cAAc,QAAQ,cAAc,EAAE,iCAAiC,cAAc,QAAQ,cAAc,EAAE,8BAA8B,cAAc,QAAQ,aAAa,EAAE,8BAA8B,EAAE,uCAAuC,cAAc,UAAU,aAAa,iBAAiB,gCAAgC,aAAa,iBAAiB,kCAAkC,EAAE,gCAAgC,C;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACApkF,IAAI,oDAAM;AACV;AACA;AACA;AACA,oBAAoB,0BAA0B;AAC9C;AACA,mBAAmB,4BAA4B;AAC/C;AACA;AACA;AACA,uBAAuB,sBAAsB;AAC7C;AACA;AACA,+BAA+B,iBAAiB;AAChD;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,SAAS;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC;AACjC;AACA;AACA;AACA;AACA;AACA;AACA,wCAAwC,gBAAgB;AACxD;AACA;AACA;AACA;AACA,iCAAiC;AACjC;AACA;AACA;AACA;AACA;AACA,+BAA+B;AAC/B;AACA;AACA;AACA;AACA;AACA,mBAAmB;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,+BAA+B;AACzD;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA,4BAA4B,SAAS,wBAAwB,EAAE;AAC/D;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,4BAA4B;AACtD;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA,4BAA4B,SAAS,mBAAmB,EAAE;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA,gCAAgC,SAAS,kBAAkB,EAAE;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA,4BAA4B,SAAS,uBAAuB,EAAE;AAC9D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,sBAAsB;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA,4BAA4B,SAAS,sBAAsB,EAAE;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,sBAAsB;AAChD;AACA;AACA;AACA;AACA,mBAAmB;AACnB;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA,gCAAgC,SAAS,mBAAmB,EAAE;AAC9D;AACA;AACA,gCAAgC,SAAS,oBAAoB,EAAE;AAC/D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,gBAAgB;AAC9C,iCAAiC,yBAAyB;AAC1D;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,uBAAuB;AACjD;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA,4BAA4B,SAAS,mBAAmB,EAAE;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA,4BAA4B,SAAS,oBAAoB,EAAE;AAC3D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oDAAM;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AClQN,kBAAkB,SAAI,IAAI,SAAI;AAC9B;AACA;AACA,4CAA4C,QAAQ;AACpD;AACA;AAC0C;AACR;AACH;AACoC;AACU;AACQ;AACR;AACA;AACF;AACL;AACe;AACtB;AAC/D,sBAAsB,mBAAO,CAAC,iFAAoB;AAClD,0BAAgB;AAChB;AACA;AACA;AACO,MAAM,SAAI;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,qBAAW;AACpC;AACA,yBAAyB,qBAAW;AACpC;AACA;AACA;AACA,4BAA4B,6BAAmB;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,wCAAwC,qBAAW;AACnD;AACA;AACA,+CAA+C,gCAAsB;AACrE,kDAAkD,gCAAsB;AACxE,wDAAwD,4BAAkB;AAC1E,yDAAyD,8BAAoB;AAC7E,4BAA4B,8BAAoB,CAAC;AACjD;AACA;AACA;AACA;AACA,kBAAkB,kCAAwB;AAC1C,kBAAkB,iCAAuB;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC,4BAAkB;AACnD;AACA;AACA;AACA;AACA,kCAAkC,yBAAe;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,yBAAe;AAC7C;AACA;AACA,uCAAuC;AACvC;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,yBAAe;AAC7C;AACA;AACA,uCAAuC;AACvC;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,8BAAa;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC,iCAAuB;AAC5D,2BAA2B,4BAAkB;AAC7C,2BAA2B,4BAAkB;AAC7C,wBAAwB,yBAAe;AACvC;AACA,aAAa;AACb,6BAA6B,wBAAU,CAAC,wBAAU;AAClD,oDAAoD,uBAAa;AACjE;AACA,gCAAgC,gCAAc;AAC9C,sCAAsC,wBAAU;AAChD;AACA,0CAA0C,sBAAS;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC,oBAAQ,EAAE,sBAAsB,EAAE;AACvE,kCAAkC,6BAAmB;AACrD;AACA;AACA,4BAA4B,8BAAoB;AAChD,4BAA4B,8BAAoB;AAChD;AACA,mCAAmC,iCAAuB;AAC1D;AACA,kBAAkB,0BAAgB;AAClC;AACA,SAAS;AACT,iCAAiC,6BAAmB;AACpD,iCAAiC,oBAAU;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,0BAAgB;AAC5B,qCAAqC,4BAAkB;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,qCAAqC,mCAAyB;AAC9D;AACA,aAAa;AACb,mCAAmC,oBAAU;AAC7C;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,wCAAwC,sCAAiB;AACzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,wBAAU,8BAA8B,KAAK,GAAG,KAAK;AACjE;AACA,uCAAuC,oBAAU;AACjD;AACA;AACA,qCAAqC,mCAAyB;AAC9D;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,mDAAmD,wCAA8B;AACjF,mDAAmD,wCAA8B;AACjF;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,+BAA+B,wBAAU;AACzC,mDAAmD,eAAe,GAAG,eAAe;AACpF;AACA;AACA;AACA,sCAAsC,8BAAoB;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2CAA2C,oBAAU;AACrD;AACA;AACA;AACA;AACA;AACA;AACA,uDAAuD,wCAA8B;AACrF,uDAAuD,wCAA8B;AACrF;AACA;AACA,iBAAiB;AACjB,gCAAgC;AAChC;AACA;AACA,kCAAkC;AAClC;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA,mCAAmC,oBAAU;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,oBAAU;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,oBAAU;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC,mCAAyB;AAC9D;AACA,0BAA0B,0BAAgB;AAC1C;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,wCAAwC,uBAAa;AACrD,oCAAoC,8BAAoB;AACxD,oCAAoC,8BAAoB;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,uBAAa;AACrC;AACA,8BAA8B,yBAAe;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC,oBAAU;AAC/C;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC,oBAAU;AAC/C;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,uBAAa;AACrC;AACA,8BAA8B,yBAAe;AAC7C;AACA;AACA;AACA;AACA,qCAAqC,oBAAU;AAC/C;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC,oBAAU;AAC3C;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,kBAAI;AACpB;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,cAAQ;AACZ,GAAG,SAAI;AACP;AACA,IAAI,cAAQ;AACZ,GAAG,SAAI;AACP;AACA,IAAI,cAAQ;AACZ,GAAG,SAAI;AACP;AACA,IAAI,cAAQ;AACZ,GAAG,SAAI;AACP;AACA,IAAI,cAAQ;AACZ,GAAG,SAAI;AACP;AACA,IAAI,cAAQ;AACZ,GAAG,SAAI;AACP;AACA,IAAI,cAAQ;AACZ,GAAG,SAAI;AACP;AACA,IAAI,cAAQ;AACZ,GAAG,SAAI;AACP;AACA,IAAI,cAAQ;AACZ,GAAG,SAAI;AACP;AACA,IAAI,cAAQ;AACZ,GAAG,SAAI;AACP;AACA,IAAI,cAAQ;AACZ,GAAG,SAAI;AACP;AACA,IAAI,cAAQ;AACZ,GAAG,SAAI;AACP;AACA,IAAI,cAAQ;AACZ,GAAG,SAAI;AACP;AACA,IAAI,cAAQ;AACZ,GAAG,SAAI;AACP;AACA,IAAI,cAAQ;AACZ,GAAG,SAAI;AACP;AACA,IAAI,cAAQ;AACZ,GAAG,SAAI;AACP;AACA,IAAI,cAAQ;AACZ,GAAG,SAAI;AACP;AACA,IAAI,cAAQ;AACZ,GAAG,SAAI;AACP;AACA,IAAI,cAAQ;AACZ,GAAG,SAAI;AACP;AACA,IAAI,cAAQ;AACZ,GAAG,SAAI;AACP;AACA,IAAI,cAAQ;AACZ,GAAG,SAAI;AACP;AACA,IAAI,cAAQ;AACZ,GAAG,SAAI;AACP;AACA,IAAI,cAAQ;AACZ,GAAG,SAAI;AACP;AACA,IAAI,cAAQ;AACZ,GAAG,SAAI;;;;;;ACvsBP,IAAI,2CAAM;AACV;AACA;AACA;AACA,uBAAuB,SAAS,8BAA8B,EAAE;AAChE;AACA,IAAI,oDAAe;AACnB,2CAAM;;;;;;ACPgB;AACS;AAChB,8FAAG;AAClB;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,0BAA0B,qBAAW;AACrC,6BAA6B,6BAAmB;AAChD;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,sCAAsC,4BAAkB;AACxD,2BAA2B,iCAAuB;AAClD;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC,4BAAkB;AACnD;AACA;AACA,0BAA0B,0BAAgB;AAC1C;AACA;AACA,yBAAyB,0BAAgB;AACzC;AACA;AACA;AACA;AACA,yEAAyE;AACzE;AACA;AACA,8BAA8B,uBAAa;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC,oBAAU;AAC/C;AACA;AACA;AACA,aAAa;AACb,0CAA0C,oBAAU;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,CAAC,CAAC,EAAC;;;ACjF+Q,CAAgB,wGAAG,EAAC,C;;;;;ACAhN;AAC3B;AACL;;;AAGtD;AACyG;AACzG,gBAAgB,sCAAU;AAC1B,EAAE,oCAAM;AACR,EAAE,2CAAM;AACR,EAAE,oDAAe;AACjB;AACA;AACA;AACA;;AAEA;;AAEA;AACA,IAAI,KAAU,EAAE,YAiBf;AACD;AACe,6D;;;;;;;;ACtCO;AACc;AACc;AACQ;AACrB;AACrC,mBAAmB,mBAAO,CAAC,qGAAwC;AACgC;AAC1B;AACP;AAClE;AACe,2FAAG;AAClB,UAAU,uBAAI;AACd;AACA,QAAQ,iBAAQ;AAChB,KAAK;AACL;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,gCAAS,EAAE,iDAAM,EAAE,yDAAU,EAAE,0BAAM,EAAE,oCAAW,EAAE,wBAAK,EAAE,4BAAO;AAC9E;AACA,KAAK;AACL;AACA;AACA,wEAAwE,EAAE,wBAAS;AACnF;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,mBAAmB,SAAI;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA,aAAa;AACb;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,SAAS,WAAW;AACjC;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,mBAAmB,uBAAuB;AAC1C;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB,iBAAiB;AACjB;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,iBAAiB;AACjB,aAAa;AACb;AACA;AACA;AACA,iBAAiB;AACjB,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,aAAa,SAAS,WAAW;AACjC;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA,aAAa;AACb,gDAAgD,oBAAQ,EAAE,yBAAyB,EAAE;AACrF;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,CAAC,EAAC;;;ACrM4Q,CAAgB,kGAAG,EAAC,C;;;;;ACApM;AACvC;AACL;AACwC;;;AAG3F;AACyG;AACzG,IAAI,cAAS,GAAG,sCAAU;AAC1B,EAAE,iCAAM;AACR,EAAE,oDAAM;AACR,EAAE,eAAe;AACjB;AACA;AACA;AACA;;AAEA;;AAEA;AACA,IAAI,KAAU,EAAE,iBAiBf;AACD,cAAS;AACM,6FAAS,Q;;;;;;;;;;;;;ACvCxB;AAAA;AAAA;AAAA;AAA6jB,CAAgB,ufAAG,EAAC,C","file":"32.11.37.1.js","sourcesContent":["// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../../../../../node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.id, \".hveuntkp>.controller[data-v-78de78e8],.hveuntkp>.menu[data-v-78de78e8]{position:fixed;z-index:1;padding:16px;background:var(--face);color:var(--text)}.hveuntkp>.controller>section[data-v-78de78e8],.hveuntkp>.menu>section[data-v-78de78e8]{padding:16px 0}.hveuntkp>.controller>section[data-v-78de78e8]:first-child,.hveuntkp>.menu>section[data-v-78de78e8]:first-child{padding-top:0}.hveuntkp>.controller>section[data-v-78de78e8]:last-child,.hveuntkp>.menu>section[data-v-78de78e8]:last-child{padding-bottom:0}.hveuntkp>.controller>section[data-v-78de78e8]:not(:last-child),.hveuntkp>.menu>section[data-v-78de78e8]:not(:last-child){border-bottom:1px solid var(--faceDivider)}.hveuntkp>.controller[data-v-78de78e8]{top:16px;left:16px;width:256px}.hveuntkp>.controller>section>.name[data-v-78de78e8]{margin:0}.hveuntkp>.menu[data-v-78de78e8]{top:16px;right:16px;width:256px}\", \"\"]);\n// Exports\nmodule.exports = exports;\n","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../../../../../node_modules/css-loader/dist/cjs.js!../../../../../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../../../../../node_modules/postcss-loader/src/index.js??ref--1-oneOf-1-2!../../../../../../../node_modules/stylus-loader/index.js!../../../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!../../../../../../../node_modules/vue-svg-inline-loader/dist/index.min.js!./room.vue?vue&type=style&index=0&id=78de78e8&lang=stylus&scoped=true&\");\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar add = require(\"!../../../../../../../node_modules/vue-style-loader/lib/addStylesClient.js\").default\nvar update = add(\"3c9d29a9\", content, false, {});\n// Hot Module Replacement\nif(module.hot) {\n // When the styles change, update the <style> tags\n if(!content.locals) {\n   module.hot.accept(\"!!../../../../../../../node_modules/css-loader/dist/cjs.js!../../../../../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../../../../../node_modules/postcss-loader/src/index.js??ref--1-oneOf-1-2!../../../../../../../node_modules/stylus-loader/index.js!../../../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!../../../../../../../node_modules/vue-svg-inline-loader/dist/index.min.js!./room.vue?vue&type=style&index=0&id=78de78e8&lang=stylus&scoped=true&\", function() {\n     var newContent = require(\"!!../../../../../../../node_modules/css-loader/dist/cjs.js!../../../../../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../../../../../node_modules/postcss-loader/src/index.js??ref--1-oneOf-1-2!../../../../../../../node_modules/stylus-loader/index.js!../../../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!../../../../../../../node_modules/vue-svg-inline-loader/dist/index.min.js!./room.vue?vue&type=style&index=0&id=78de78e8&lang=stylus&scoped=true&\");\n     if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n     update(newContent);\n   });\n }\n // When the module is disposed, remove the <style> tags\n module.hot.dispose(function() { update(); });\n}","module.exports = [{id:'milk',place:'floor'},{id:'bed',place:'floor'},{id:'low-table',place:'floor',props:{color:'color'},color:{Table:'color'}},{id:'desk',place:'floor',props:{color:'color'},color:{Board:'color'}},{id:'chair',place:'floor',props:{color:'color'},color:{Chair:'color'}},{id:'chair2',place:'floor',props:{color1:'color',color2:'color'},color:{Cushion:'color1',Leg:'color2'}},{id:'fan',place:'wall'},{id:'pc',place:'floor'},{id:'plant',place:'floor'},{id:'plant2',place:'floor'},{id:'eraser',place:'floor'},{id:'pencil',place:'floor'},{id:'pudding',place:'floor'},{id:'cardboard-box',place:'floor'},{id:'cardboard-box2',place:'floor'},{id:'cardboard-box3',place:'floor'},{id:'book',place:'floor',props:{color:'color'},color:{Cover:'color'}},{id:'book2',place:'floor'},{id:'piano',place:'floor'},{id:'facial-tissue',place:'floor'},{id:'server',place:'floor'},{id:'moon',place:'floor'},{id:'corkboard',place:'wall'},{id:'mousepad',place:'floor',props:{color:'color'},color:{Pad:'color'}},{id:'monitor',place:'floor',props:{screen:'image'},texture:{Screen:{prop:'screen',uv:{x:0,y:434,width:1024,height:588}}}},{id:'tv',place:'floor',props:{screen:'image'},texture:{Screen:{prop:'screen',uv:{x:0,y:434,width:1024,height:588}}}},{id:'keyboard',place:'floor'},{id:'carpet-stripe',place:'floor',props:{color1:'color',color2:'color'},color:{CarpetAreaA:'color1',CarpetAreaB:'color2'}},{id:'mat',place:'floor',props:{color:'color'},color:{Mat:'color'}},{id:'color-box',place:'floor',props:{color:'color'},color:{main:'color'}},{id:'wall-clock',place:'wall'},{id:'cube',place:'floor',props:{color:'color'},color:{Cube:'color'}},{id:'photoframe',place:'wall',props:{photo:'image',color:'color'},texture:{Photo:{prop:'photo',uv:{x:0,y:342,width:1024,height:683}}},color:{Frame:'color'}},{id:'pinguin',place:'floor',props:{body:'color',belly:'color'},color:{Body:'body',Belly:'belly'}},{id:'rubik-cube',place:'floor'},{id:'poster-h',place:'wall',props:{picture:'image'},texture:{Poster:{prop:'picture',uv:{x:0,y:277,width:1024,height:745}}}},{id:'poster-v',place:'wall',props:{picture:'image'},texture:{Poster:{prop:'picture',uv:{x:0,y:0,width:745,height:1024}}}},{id:'sofa',place:'floor',props:{color:'color'},color:{Sofa:'color'}},{id:'spiral',place:'floor',props:{color:'color'},color:{Step:'color'}},{id:'bin',place:'floor',props:{color:'color'},color:{Bin:'color'}},{id:'cup-noodle',place:'floor'},{id:'holo-display',place:'floor',props:{image:'image'},texture:{Image_Front:{prop:'image',uv:{x:0,y:0,width:1024,height:1024}},Image_Back:{prop:'image',uv:{x:0,y:0,width:1024,height:1024}}}},{id:'energy-drink',place:'floor'}]","var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\"div\", { staticClass: \"hveuntkp\" }, [\n    _vm.objectSelected\n      ? _c(\"div\", { staticClass: \"controller\" }, [\n          _c(\n            \"section\",\n            [\n              _c(\"p\", { staticClass: \"name\" }, [\n                _vm._v(_vm._s(_vm.selectedFurnitureName))\n              ]),\n              _c(\"x-preview\", { ref: \"preview\" }),\n              _vm.selectedFurnitureInfo.props\n                ? _vm._l(Object.keys(_vm.selectedFurnitureInfo.props), function(\n                    k\n                  ) {\n                    return _c(\n                      \"div\",\n                      { key: k },\n                      [\n                        _c(\"p\", [_vm._v(_vm._s(k))]),\n                        _vm.selectedFurnitureInfo.props[k] === \"image\"\n                          ? [\n                              _c(\n                                \"ui-button\",\n                                {\n                                  on: {\n                                    click: function($event) {\n                                      return _vm.chooseImage(k)\n                                    }\n                                  }\n                                },\n                                [_vm._v(_vm._s(_vm.$t(\"chooseImage\")))]\n                              )\n                            ]\n                          : _vm.selectedFurnitureInfo.props[k] === \"color\"\n                          ? [\n                              _c(\"input\", {\n                                attrs: { type: \"color\" },\n                                domProps: {\n                                  value: _vm.selectedFurnitureProps\n                                    ? _vm.selectedFurnitureProps[k]\n                                    : null\n                                },\n                                on: {\n                                  change: function($event) {\n                                    return _vm.updateColor(k, $event)\n                                  }\n                                }\n                              })\n                            ]\n                          : _vm._e()\n                      ],\n                      2\n                    )\n                  })\n                : _vm._e()\n            ],\n            2\n          ),\n          _c(\n            \"section\",\n            [\n              _c(\n                \"ui-button\",\n                {\n                  attrs: { primary: _vm.isTranslateMode },\n                  on: {\n                    click: function($event) {\n                      return _vm.translate()\n                    }\n                  }\n                },\n                [\n                  _c(\"fa\", { attrs: { icon: _vm.faArrowsAlt } }),\n                  _vm._v(\" \" + _vm._s(_vm.$t(\"translate\")))\n                ],\n                1\n              ),\n              _c(\n                \"ui-button\",\n                {\n                  attrs: { primary: _vm.isRotateMode },\n                  on: {\n                    click: function($event) {\n                      return _vm.rotate()\n                    }\n                  }\n                },\n                [\n                  _c(\"fa\", { attrs: { icon: _vm.faUndo } }),\n                  _vm._v(\" \" + _vm._s(_vm.$t(\"rotate\")))\n                ],\n                1\n              ),\n              _vm.isTranslateMode || _vm.isRotateMode\n                ? _c(\n                    \"ui-button\",\n                    {\n                      on: {\n                        click: function($event) {\n                          return _vm.exit()\n                        }\n                      }\n                    },\n                    [\n                      _c(\"fa\", { attrs: { icon: _vm.faBan } }),\n                      _vm._v(\" \" + _vm._s(_vm.$t(\"exit\")))\n                    ],\n                    1\n                  )\n                : _vm._e()\n            ],\n            1\n          ),\n          _c(\n            \"section\",\n            [\n              _c(\n                \"ui-button\",\n                {\n                  on: {\n                    click: function($event) {\n                      return _vm.remove()\n                    }\n                  }\n                },\n                [\n                  _c(\"fa\", { attrs: { icon: _vm.faTrashAlt } }),\n                  _vm._v(\" \" + _vm._s(_vm.$t(\"remove\")))\n                ],\n                1\n              )\n            ],\n            1\n          )\n        ])\n      : _vm._e(),\n    _vm.isMyRoom\n      ? _c(\"div\", { staticClass: \"menu\" }, [\n          _c(\n            \"section\",\n            [\n              _c(\n                \"ui-button\",\n                {\n                  on: {\n                    click: function($event) {\n                      return _vm.add()\n                    }\n                  }\n                },\n                [\n                  _c(\"fa\", { attrs: { icon: _vm.faBoxOpen } }),\n                  _vm._v(\" \" + _vm._s(_vm.$t(\"add-furniture\")))\n                ],\n                1\n              )\n            ],\n            1\n          ),\n          _c(\n            \"section\",\n            [\n              _c(\n                \"ui-select\",\n                {\n                  attrs: { value: _vm.roomType },\n                  on: {\n                    input: function($event) {\n                      return _vm.updateRoomType($event)\n                    }\n                  },\n                  scopedSlots: _vm._u(\n                    [\n                      {\n                        key: \"label\",\n                        fn: function() {\n                          return [_vm._v(_vm._s(_vm.$t(\"room-type\")))]\n                        },\n                        proxy: true\n                      }\n                    ],\n                    null,\n                    false,\n                    3739269933\n                  )\n                },\n                [\n                  _c(\"option\", { attrs: { value: \"default\" } }, [\n                    _vm._v(_vm._s(_vm.$t(\"rooms.default\")))\n                  ]),\n                  _c(\"option\", { attrs: { value: \"washitsu\" } }, [\n                    _vm._v(_vm._s(_vm.$t(\"rooms.washitsu\")))\n                  ])\n                ]\n              ),\n              _vm.roomType === \"default\"\n                ? _c(\"label\", [\n                    _c(\"span\", [_vm._v(_vm._s(_vm.$t(\"carpet-color\")))]),\n                    _c(\"input\", {\n                      attrs: { type: \"color\" },\n                      domProps: { value: _vm.carpetColor },\n                      on: {\n                        change: function($event) {\n                          return _vm.updateCarpetColor($event)\n                        }\n                      }\n                    })\n                  ])\n                : _vm._e()\n            ],\n            1\n          ),\n          _c(\n            \"section\",\n            [\n              _c(\n                \"ui-button\",\n                {\n                  attrs: { primary: _vm.changed },\n                  on: {\n                    click: function($event) {\n                      return _vm.save()\n                    }\n                  }\n                },\n                [\n                  _c(\"fa\", { attrs: { icon: _vm.faSave } }),\n                  _vm._v(\" \" + _vm._s(_vm.$t(\"save\")))\n                ],\n                1\n              ),\n              _c(\n                \"ui-button\",\n                {\n                  on: {\n                    click: function($event) {\n                      return _vm.clear()\n                    }\n                  }\n                },\n                [\n                  _c(\"fa\", { attrs: { icon: _vm.faBroom } }),\n                  _vm._v(\" \" + _vm._s(_vm.$t(\"clear\")))\n                ],\n                1\n              )\n            ],\n            1\n          )\n        ])\n      : _vm._e()\n  ])\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport autobind from 'autobind-decorator';\nimport { v4 as uuid } from 'uuid';\nimport * as THREE from 'three';\nimport { GLTFLoader } from 'three/examples/jsm/loaders/GLTFLoader';\nimport { OrbitControls } from 'three/examples/jsm/controls/OrbitControls.js';\nimport { EffectComposer } from 'three/examples/jsm/postprocessing/EffectComposer.js';\nimport { RenderPass } from 'three/examples/jsm/postprocessing/RenderPass.js';\nimport { ShaderPass } from 'three/examples/jsm/postprocessing/ShaderPass.js';\nimport { BloomPass } from 'three/examples/jsm/postprocessing/BloomPass.js';\nimport { FXAAShader } from 'three/examples/jsm/shaders/FXAAShader.js';\nimport { TransformControls } from 'three/examples/jsm/controls/TransformControls.js';\nimport { query as urlQuery } from '../../../../../prelude/url';\nconst furnitureDefs = require('./furnitures.json5');\nTHREE.ImageUtils.crossOrigin = '';\n/**\n * MisskeyRoom Core Engine\n */\nexport class Room {\n    constructor(user, isMyRoom, roomInfo, container, options) {\n        this.mixers = [];\n        this.objects = [];\n        this.selectedObject = null;\n        this.isTransformMode = false;\n        this.roomInfo = roomInfo;\n        this.graphicsQuality = options.graphicsQuality;\n        this.onChangeSelect = options.onChangeSelect;\n        this.clock = new THREE.Clock(true);\n        //#region Init a scene\n        this.scene = new THREE.Scene();\n        const width = window.innerWidth;\n        const height = window.innerHeight;\n        //#region Init a renderer\n        this.renderer = new THREE.WebGLRenderer({\n            antialias: false,\n            stencil: false,\n            alpha: false,\n            powerPreference: this.graphicsQuality === 'ultra' ? 'high-performance' :\n                this.graphicsQuality === 'high' ? 'high-performance' :\n                    this.graphicsQuality === 'medium' ? 'default' :\n                        this.graphicsQuality === 'low' ? 'low-power' :\n                            'low-power' // cheep\n        });\n        this.renderer.setPixelRatio(window.devicePixelRatio);\n        this.renderer.setSize(width, height);\n        this.renderer.autoClear = false;\n        this.renderer.setClearColor(new THREE.Color(0x051f2d));\n        this.renderer.shadowMap.enabled = this.enableShadow;\n        this.renderer.shadowMap.type =\n            this.graphicsQuality === 'ultra' ? THREE.PCFSoftShadowMap :\n                this.graphicsQuality === 'high' ? THREE.PCFSoftShadowMap :\n                    this.graphicsQuality === 'medium' ? THREE.PCFShadowMap :\n                        this.graphicsQuality === 'low' ? THREE.BasicShadowMap :\n                            THREE.BasicShadowMap; // cheep\n        container.appendChild(this.canvas);\n        //#endregion\n        //#region Init a camera\n        this.camera = options.useOrthographicCamera\n            ? new THREE.OrthographicCamera(width / -2, width / 2, height / 2, height / -2, -10, 10)\n            : new THREE.PerspectiveCamera(45, width / height);\n        if (options.useOrthographicCamera) {\n            this.camera.position.x = 2;\n            this.camera.position.y = 2;\n            this.camera.position.z = 2;\n            this.camera.zoom = 100;\n            this.camera.updateProjectionMatrix();\n        }\n        else {\n            this.camera.position.x = 5;\n            this.camera.position.y = 2;\n            this.camera.position.z = 5;\n        }\n        this.scene.add(this.camera);\n        //#endregion\n        //#region AmbientLight\n        const ambientLight = new THREE.AmbientLight(0xffffff, 1);\n        this.scene.add(ambientLight);\n        //#endregion\n        if (this.graphicsQuality !== 'cheep') {\n            //#region Room light\n            const roomLight = new THREE.SpotLight(0xffffff, 0.1);\n            roomLight.position.set(0, 8, 0);\n            roomLight.castShadow = this.enableShadow;\n            roomLight.shadow.bias = -0.0001;\n            roomLight.shadow.mapSize.width = this.shadowQuality;\n            roomLight.shadow.mapSize.height = this.shadowQuality;\n            roomLight.shadow.camera.near = 0.1;\n            roomLight.shadow.camera.far = 9;\n            roomLight.shadow.camera.fov = 45;\n            this.scene.add(roomLight);\n            //#endregion\n        }\n        //#region Out light\n        const outLight1 = new THREE.SpotLight(0xffffff, 0.4);\n        outLight1.position.set(9, 3, -2);\n        outLight1.castShadow = this.enableShadow;\n        outLight1.shadow.bias = -0.001; // アクネ、アーチファクト対策 その代わりピーターパンが発生する可能性がある\n        outLight1.shadow.mapSize.width = this.shadowQuality;\n        outLight1.shadow.mapSize.height = this.shadowQuality;\n        outLight1.shadow.camera.near = 6;\n        outLight1.shadow.camera.far = 15;\n        outLight1.shadow.camera.fov = 45;\n        this.scene.add(outLight1);\n        const outLight2 = new THREE.SpotLight(0xffffff, 0.2);\n        outLight2.position.set(-2, 3, 9);\n        outLight2.castShadow = false;\n        outLight2.shadow.bias = -0.001; // アクネ、アーチファクト対策 その代わりピーターパンが発生する可能性がある\n        outLight2.shadow.camera.near = 6;\n        outLight2.shadow.camera.far = 15;\n        outLight2.shadow.camera.fov = 45;\n        this.scene.add(outLight2);\n        //#endregion\n        //#region Init a controller\n        this.controls = new OrbitControls(this.camera, this.canvas);\n        this.controls.target.set(0, 1, 0);\n        this.controls.enableZoom = true;\n        this.controls.enablePan = isMyRoom;\n        this.controls.minPolarAngle = 0;\n        this.controls.maxPolarAngle = Math.PI / 2;\n        this.controls.minAzimuthAngle = 0;\n        this.controls.maxAzimuthAngle = Math.PI / 2;\n        this.controls.enableDamping = true;\n        this.controls.dampingFactor = 0.2;\n        this.controls.mouseButtons.LEFT = 1;\n        this.controls.mouseButtons.MIDDLE = 2;\n        this.controls.mouseButtons.RIGHT = 0;\n        //#endregion\n        //#region POST FXs\n        if (!this.usePostFXs) {\n            this.composer = null;\n        }\n        else {\n            const renderTarget = new THREE.WebGLRenderTarget(width, height, {\n                minFilter: THREE.LinearFilter,\n                magFilter: THREE.LinearFilter,\n                format: THREE.RGBFormat,\n                stencilBuffer: false,\n            });\n            const fxaa = new ShaderPass(FXAAShader);\n            fxaa.uniforms['resolution'].value = new THREE.Vector2(1 / width, 1 / height);\n            fxaa.renderToScreen = true;\n            this.composer = new EffectComposer(this.renderer, renderTarget);\n            this.composer.addPass(new RenderPass(this.scene, this.camera));\n            if (this.graphicsQuality === 'ultra') {\n                this.composer.addPass(new BloomPass(0.25, 30, 128.0, 512));\n            }\n            this.composer.addPass(fxaa);\n        }\n        //#endregion\n        //#endregion\n        //#region Label\n        //#region Avatar\n        const avatarUrl = `/proxy/?${urlQuery({ url: user.avatarUrl })}`;\n        const textureLoader = new THREE.TextureLoader();\n        textureLoader.crossOrigin = 'anonymous';\n        const iconTexture = textureLoader.load(avatarUrl);\n        iconTexture.wrapS = THREE.RepeatWrapping;\n        iconTexture.wrapT = THREE.RepeatWrapping;\n        iconTexture.anisotropy = 16;\n        const avatarMaterial = new THREE.MeshBasicMaterial({\n            map: iconTexture,\n            side: THREE.DoubleSide,\n            alphaTest: 0.5\n        });\n        const iconGeometry = new THREE.PlaneGeometry(1, 1);\n        const avatarObject = new THREE.Mesh(iconGeometry, avatarMaterial);\n        avatarObject.position.set(-3, 2.5, 2);\n        avatarObject.rotation.y = Math.PI / 2;\n        avatarObject.castShadow = false;\n        this.scene.add(avatarObject);\n        //#endregion\n        //#region Username\n        const name = user.username;\n        new THREE.FontLoader().load('/assets/fonts/helvetiker_regular.typeface.json', font => {\n            const nameGeometry = new THREE.TextGeometry(name, {\n                size: 0.5,\n                height: 0,\n                curveSegments: 8,\n                font: font,\n                bevelThickness: 0,\n                bevelSize: 0,\n                bevelEnabled: false\n            });\n            const nameMaterial = new THREE.MeshLambertMaterial({\n                color: 0xffffff\n            });\n            const nameObject = new THREE.Mesh(nameGeometry, nameMaterial);\n            nameObject.position.set(-3, 2.25, 1.25);\n            nameObject.rotation.y = Math.PI / 2;\n            nameObject.castShadow = false;\n            this.scene.add(nameObject);\n        });\n        //#endregion\n        //#endregion\n        //#region Interaction\n        if (isMyRoom) {\n            this.furnitureControl = new TransformControls(this.camera, this.canvas);\n            this.scene.add(this.furnitureControl);\n            // Hover highlight\n            this.canvas.onmousemove = this.onmousemove;\n            // Click\n            this.canvas.onmousedown = this.onmousedown;\n        }\n        //#endregion\n        //#region Init room\n        this.loadRoom();\n        //#endregion\n        //#region Load furnitures\n        for (const furniture of this.furnitures) {\n            this.loadFurniture(furniture).then(obj => {\n                this.scene.add(obj.scene);\n                this.objects.push(obj.scene);\n            });\n        }\n        //#endregion\n        // Start render\n        if (this.usePostFXs) {\n            this.renderWithPostFXs();\n        }\n        else {\n            this.renderWithoutPostFXs();\n        }\n    }\n    get canvas() {\n        return this.renderer.domElement;\n    }\n    get furnitures() {\n        return this.roomInfo.furnitures;\n    }\n    set furnitures(furnitures) {\n        this.roomInfo.furnitures = furnitures;\n    }\n    get enableShadow() {\n        return this.graphicsQuality != 'cheep';\n    }\n    get usePostFXs() {\n        return this.graphicsQuality !== 'cheep' && this.graphicsQuality !== 'low';\n    }\n    get shadowQuality() {\n        return (this.graphicsQuality === 'ultra' ? 16384 :\n            this.graphicsQuality === 'high' ? 8192 :\n                this.graphicsQuality === 'medium' ? 4096 :\n                    this.graphicsQuality === 'low' ? 1024 :\n                        0); // cheep\n    }\n    renderWithoutPostFXs() {\n        this.renderFrameRequestId =\n            window.requestAnimationFrame(this.renderWithoutPostFXs);\n        // Update animations\n        const clock = this.clock.getDelta();\n        for (const mixer of this.mixers) {\n            mixer.update(clock);\n        }\n        this.controls.update();\n        this.renderer.render(this.scene, this.camera);\n    }\n    renderWithPostFXs() {\n        this.renderFrameRequestId =\n            window.requestAnimationFrame(this.renderWithPostFXs);\n        // Update animations\n        const clock = this.clock.getDelta();\n        for (const mixer of this.mixers) {\n            mixer.update(clock);\n        }\n        this.controls.update();\n        this.renderer.clear();\n        this.composer.render();\n    }\n    loadRoom() {\n        const type = this.roomInfo.roomType;\n        new GLTFLoader().load(`/assets/room/rooms/${type}/${type}.glb`, gltf => {\n            gltf.scene.traverse(child => {\n                if (!(child instanceof THREE.Mesh))\n                    return;\n                child.receiveShadow = this.enableShadow;\n                child.material = new THREE.MeshLambertMaterial({\n                    color: child.material.color,\n                    map: child.material.map,\n                    name: child.material.name,\n                });\n                // 異方性フィルタリング\n                if (child.material.map && this.graphicsQuality !== 'cheep') {\n                    child.material.map.minFilter = THREE.LinearMipMapLinearFilter;\n                    child.material.map.magFilter = THREE.LinearMipMapLinearFilter;\n                    child.material.map.anisotropy = 8;\n                }\n            });\n            gltf.scene.position.set(0, 0, 0);\n            this.scene.add(gltf.scene);\n            this.roomObj = gltf.scene;\n            if (this.roomInfo.roomType === 'default') {\n                this.applyCarpetColor();\n            }\n        });\n    }\n    loadFurniture(furniture) {\n        const def = furnitureDefs.find(d => d.id === furniture.type);\n        return new Promise((res, rej) => {\n            const loader = new GLTFLoader();\n            loader.load(`/assets/room/furnitures/${furniture.type}/${furniture.type}.glb`, gltf => {\n                const model = gltf.scene;\n                // Load animation\n                if (gltf.animations.length > 0) {\n                    const mixer = new THREE.AnimationMixer(model);\n                    this.mixers.push(mixer);\n                    for (const clip of gltf.animations) {\n                        mixer.clipAction(clip).play();\n                    }\n                }\n                model.name = furniture.id;\n                model.position.x = furniture.position.x;\n                model.position.y = furniture.position.y;\n                model.position.z = furniture.position.z;\n                model.rotation.x = furniture.rotation.x;\n                model.rotation.y = furniture.rotation.y;\n                model.rotation.z = furniture.rotation.z;\n                model.traverse(child => {\n                    if (!(child instanceof THREE.Mesh))\n                        return;\n                    child.castShadow = this.enableShadow;\n                    child.receiveShadow = this.enableShadow;\n                    child.material.metalness = 0;\n                    // 異方性フィルタリング\n                    if (child.material.map && this.graphicsQuality !== 'cheep') {\n                        child.material.map.minFilter = THREE.LinearMipMapLinearFilter;\n                        child.material.map.magFilter = THREE.LinearMipMapLinearFilter;\n                        child.material.map.anisotropy = 8;\n                    }\n                });\n                if (def.color) { // カスタムカラー\n                    this.applyCustomColor(model);\n                }\n                if (def.texture) { // カスタムテクスチャ\n                    this.applyCustomTexture(model);\n                }\n                res(gltf);\n            }, null, rej);\n        });\n    }\n    applyCarpetColor() {\n        this.roomObj.traverse(child => {\n            if (!(child instanceof THREE.Mesh))\n                return;\n            if (child.material &&\n                child.material.name &&\n                child.material.name === 'Carpet') {\n                const colorHex = parseInt(this.roomInfo.carpetColor.substr(1), 16);\n                child.material.color.setHex(colorHex);\n            }\n        });\n    }\n    applyCustomColor(model) {\n        const furniture = this.furnitures.find(furniture => furniture.id === model.name);\n        const def = furnitureDefs.find(d => d.id === furniture.type);\n        if (def.color == null)\n            return;\n        model.traverse(child => {\n            if (!(child instanceof THREE.Mesh))\n                return;\n            for (const t of Object.keys(def.color)) {\n                if (!child.material ||\n                    !child.material.name ||\n                    child.material.name !== t)\n                    continue;\n                const prop = def.color[t];\n                const val = furniture.props ? furniture.props[prop] : undefined;\n                if (val == null)\n                    continue;\n                const colorHex = parseInt(val.substr(1), 16);\n                child.material.color.setHex(colorHex);\n            }\n        });\n    }\n    applyCustomTexture(model) {\n        const furniture = this.furnitures.find(furniture => furniture.id === model.name);\n        const def = furnitureDefs.find(d => d.id === furniture.type);\n        if (def.texture == null)\n            return;\n        model.traverse(child => {\n            if (!(child instanceof THREE.Mesh))\n                return;\n            for (const t of Object.keys(def.texture)) {\n                if (child.name !== t)\n                    continue;\n                const prop = def.texture[t].prop;\n                const val = furniture.props ? furniture.props[prop] : undefined;\n                if (val == null)\n                    continue;\n                const canvas = document.createElement('canvas');\n                canvas.height = 1024;\n                canvas.width = 1024;\n                child.material = new THREE.MeshLambertMaterial({\n                    emissive: 0x111111,\n                    side: THREE.DoubleSide,\n                    alphaTest: 0.5,\n                });\n                const img = new Image();\n                img.crossOrigin = 'anonymous';\n                img.onload = () => {\n                    const uvInfo = def.texture[t].uv;\n                    const ctx = canvas.getContext('2d');\n                    ctx.drawImage(img, 0, 0, img.width, img.height, uvInfo.x, uvInfo.y, uvInfo.width, uvInfo.height);\n                    const texture = new THREE.Texture(canvas);\n                    texture.wrapS = THREE.RepeatWrapping;\n                    texture.wrapT = THREE.RepeatWrapping;\n                    texture.anisotropy = 16;\n                    texture.flipY = false;\n                    child.material.map = texture;\n                    child.material.needsUpdate = true;\n                    child.material.map.needsUpdate = true;\n                };\n                img.src = val;\n            }\n        });\n    }\n    onmousemove(ev) {\n        if (this.isTransformMode)\n            return;\n        const rect = ev.target.getBoundingClientRect();\n        const x = (((ev.clientX * window.devicePixelRatio) - rect.left) / this.canvas.width) * 2 - 1;\n        const y = -(((ev.clientY * window.devicePixelRatio) - rect.top) / this.canvas.height) * 2 + 1;\n        const pos = new THREE.Vector2(x, y);\n        this.camera.updateMatrixWorld();\n        const raycaster = new THREE.Raycaster();\n        raycaster.setFromCamera(pos, this.camera);\n        const intersects = raycaster.intersectObjects(this.objects, true);\n        for (const object of this.objects) {\n            if (this.isSelectedObject(object))\n                continue;\n            object.traverse(child => {\n                if (child instanceof THREE.Mesh) {\n                    child.material.emissive.setHex(0x000000);\n                }\n            });\n        }\n        if (intersects.length > 0) {\n            const intersected = this.getRoot(intersects[0].object);\n            if (this.isSelectedObject(intersected))\n                return;\n            intersected.traverse(child => {\n                if (child instanceof THREE.Mesh) {\n                    child.material.emissive.setHex(0x191919);\n                }\n            });\n        }\n    }\n    onmousedown(ev) {\n        if (this.isTransformMode)\n            return;\n        if (ev.target !== this.canvas || ev.button !== 0)\n            return;\n        const rect = ev.target.getBoundingClientRect();\n        const x = (((ev.clientX * window.devicePixelRatio) - rect.left) / this.canvas.width) * 2 - 1;\n        const y = -(((ev.clientY * window.devicePixelRatio) - rect.top) / this.canvas.height) * 2 + 1;\n        const pos = new THREE.Vector2(x, y);\n        this.camera.updateMatrixWorld();\n        const raycaster = new THREE.Raycaster();\n        raycaster.setFromCamera(pos, this.camera);\n        const intersects = raycaster.intersectObjects(this.objects, true);\n        for (const object of this.objects) {\n            object.traverse(child => {\n                if (child instanceof THREE.Mesh) {\n                    child.material.emissive.setHex(0x000000);\n                }\n            });\n        }\n        if (intersects.length > 0) {\n            const selectedObj = this.getRoot(intersects[0].object);\n            this.selectFurniture(selectedObj);\n        }\n        else {\n            this.selectedObject = null;\n            this.onChangeSelect(null);\n        }\n    }\n    getRoot(obj) {\n        let found = false;\n        let x = obj.parent;\n        while (!found) {\n            if (x.parent.parent == null) {\n                found = true;\n            }\n            else {\n                x = x.parent;\n            }\n        }\n        return x;\n    }\n    isSelectedObject(obj) {\n        if (this.selectedObject == null) {\n            return false;\n        }\n        else {\n            return obj.name === this.selectedObject.name;\n        }\n    }\n    selectFurniture(obj) {\n        this.selectedObject = obj;\n        this.onChangeSelect(obj);\n        obj.traverse(child => {\n            if (child instanceof THREE.Mesh) {\n                child.material.emissive.setHex(0xff0000);\n            }\n        });\n    }\n    /**\n     * 家具の移動/回転モードにします\n     * @param type 移動か回転か\n     */\n    enterTransformMode(type) {\n        this.isTransformMode = true;\n        this.furnitureControl.setMode(type);\n        this.furnitureControl.attach(this.selectedObject);\n    }\n    /**\n     * 家具の移動/回転モードを終了します\n     */\n    exitTransformMode() {\n        this.isTransformMode = false;\n        this.furnitureControl.detach();\n    }\n    /**\n     * 家具プロパティを更新します\n     * @param key プロパティ名\n     * @param value 値\n     */\n    updateProp(key, value) {\n        const furniture = this.furnitures.find(furniture => furniture.id === this.selectedObject.name);\n        if (furniture.props == null)\n            furniture.props = {};\n        furniture.props[key] = value;\n        this.applyCustomColor(this.selectedObject);\n        this.applyCustomTexture(this.selectedObject);\n    }\n    /**\n     * 部屋に家具を追加します\n     * @param type 家具の種類\n     */\n    addFurniture(type) {\n        const furniture = {\n            id: uuid(),\n            type: type,\n            position: {\n                x: 0,\n                y: 0,\n                z: 0,\n            },\n            rotation: {\n                x: 0,\n                y: 0,\n                z: 0,\n            },\n        };\n        this.furnitures.push(furniture);\n        this.loadFurniture(furniture).then(obj => {\n            this.scene.add(obj.scene);\n            this.objects.push(obj.scene);\n        });\n    }\n    /**\n     * 現在選択されている家具を部屋から削除します\n     */\n    removeFurniture() {\n        this.exitTransformMode();\n        const obj = this.selectedObject;\n        this.scene.remove(obj);\n        this.objects = this.objects.filter(object => object.name !== obj.name);\n        this.furnitures = this.furnitures.filter(furniture => furniture.id !== obj.name);\n        this.selectedObject = null;\n        this.onChangeSelect(null);\n    }\n    /**\n     * 全ての家具を部屋から削除します\n     */\n    removeAllFurnitures() {\n        this.exitTransformMode();\n        for (const obj of this.objects) {\n            this.scene.remove(obj);\n        }\n        this.objects = [];\n        this.furnitures = [];\n        this.selectedObject = null;\n        this.onChangeSelect(null);\n    }\n    /**\n     * 部屋の床の色を変更します\n     * @param color 色\n     */\n    updateCarpetColor(color) {\n        this.roomInfo.carpetColor = color;\n        this.applyCarpetColor();\n    }\n    /**\n     * 部屋の種類を変更します\n     * @param type 種類\n     */\n    changeRoomType(type) {\n        this.roomInfo.roomType = type;\n        this.scene.remove(this.roomObj);\n        this.loadRoom();\n    }\n    /**\n     * 部屋データを取得します\n     */\n    getRoomInfo() {\n        for (const obj of this.objects) {\n            const furniture = this.furnitures.find(f => f.id === obj.name);\n            furniture.position.x = obj.position.x;\n            furniture.position.y = obj.position.y;\n            furniture.position.z = obj.position.z;\n            furniture.rotation.x = obj.rotation.x;\n            furniture.rotation.y = obj.rotation.y;\n            furniture.rotation.z = obj.rotation.z;\n        }\n        return this.roomInfo;\n    }\n    /**\n     * 選択されている家具を取得します\n     */\n    getSelectedObject() {\n        return this.selectedObject;\n    }\n    findFurnitureById(id) {\n        return this.furnitures.find(furniture => furniture.id === id);\n    }\n    /**\n     * レンダリングを終了します\n     */\n    destroy() {\n        // Stop render loop\n        window.cancelAnimationFrame(this.renderFrameRequestId);\n        this.controls.dispose();\n        this.scene.dispose();\n    }\n}\n__decorate([\n    autobind\n], Room.prototype, \"renderWithoutPostFXs\", null);\n__decorate([\n    autobind\n], Room.prototype, \"renderWithPostFXs\", null);\n__decorate([\n    autobind\n], Room.prototype, \"loadRoom\", null);\n__decorate([\n    autobind\n], Room.prototype, \"loadFurniture\", null);\n__decorate([\n    autobind\n], Room.prototype, \"applyCarpetColor\", null);\n__decorate([\n    autobind\n], Room.prototype, \"applyCustomColor\", null);\n__decorate([\n    autobind\n], Room.prototype, \"applyCustomTexture\", null);\n__decorate([\n    autobind\n], Room.prototype, \"onmousemove\", null);\n__decorate([\n    autobind\n], Room.prototype, \"onmousedown\", null);\n__decorate([\n    autobind\n], Room.prototype, \"getRoot\", null);\n__decorate([\n    autobind\n], Room.prototype, \"isSelectedObject\", null);\n__decorate([\n    autobind\n], Room.prototype, \"selectFurniture\", null);\n__decorate([\n    autobind\n], Room.prototype, \"enterTransformMode\", null);\n__decorate([\n    autobind\n], Room.prototype, \"exitTransformMode\", null);\n__decorate([\n    autobind\n], Room.prototype, \"updateProp\", null);\n__decorate([\n    autobind\n], Room.prototype, \"addFurniture\", null);\n__decorate([\n    autobind\n], Room.prototype, \"removeFurniture\", null);\n__decorate([\n    autobind\n], Room.prototype, \"removeAllFurnitures\", null);\n__decorate([\n    autobind\n], Room.prototype, \"updateCarpetColor\", null);\n__decorate([\n    autobind\n], Room.prototype, \"changeRoomType\", null);\n__decorate([\n    autobind\n], Room.prototype, \"getRoomInfo\", null);\n__decorate([\n    autobind\n], Room.prototype, \"getSelectedObject\", null);\n__decorate([\n    autobind\n], Room.prototype, \"findFurnitureById\", null);\n__decorate([\n    autobind\n], Room.prototype, \"destroy\", null);\n","var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\"canvas\", { attrs: { width: \"224\", height: \"128\" } })\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }","import Vue from 'vue';\nimport * as THREE from 'three';\nexport default Vue.extend({\n    data() {\n        return {\n            selected: null,\n            objectHeight: 0,\n            orbitRadius: 5\n        };\n    },\n    mounted() {\n        const canvas = this.$el;\n        const width = canvas.width;\n        const height = canvas.height;\n        const scene = new THREE.Scene();\n        const renderer = new THREE.WebGLRenderer({\n            canvas: canvas,\n            antialias: true,\n            alpha: false\n        });\n        renderer.setPixelRatio(window.devicePixelRatio);\n        renderer.setSize(width, height);\n        renderer.setClearColor(0x000000);\n        renderer.autoClear = false;\n        renderer.shadowMap.enabled = true;\n        renderer.shadowMap.cullFace = THREE.CullFaceBack;\n        const camera = new THREE.PerspectiveCamera(75, width / height, 0.1, 100);\n        camera.zoom = 10;\n        camera.position.x = 0;\n        camera.position.y = 2;\n        camera.position.z = 0;\n        camera.updateProjectionMatrix();\n        scene.add(camera);\n        const ambientLight = new THREE.AmbientLight(0xffffff, 1);\n        ambientLight.castShadow = false;\n        scene.add(ambientLight);\n        const light = new THREE.PointLight(0xffffff, 1, 100);\n        light.position.set(3, 3, 3);\n        scene.add(light);\n        const grid = new THREE.GridHelper(5, 16, 0x444444, 0x222222);\n        scene.add(grid);\n        const render = () => {\n            const timer = Date.now() * 0.0004;\n            requestAnimationFrame(render);\n            camera.position.y = Math.sin(Math.PI / 6) * this.orbitRadius; // Math.PI / 6 => 30deg\n            camera.position.z = Math.cos(timer) * this.orbitRadius;\n            camera.position.x = Math.sin(timer) * this.orbitRadius;\n            camera.lookAt(new THREE.Vector3(0, this.objectHeight / 2, 0));\n            renderer.render(scene, camera);\n        };\n        this.selected = selected => {\n            const obj = selected.clone();\n            // Remove current object\n            const current = scene.getObjectByName('obj');\n            if (current != null) {\n                scene.remove(current);\n            }\n            // Add new object\n            obj.name = 'obj';\n            obj.position.x = 0;\n            obj.position.y = 0;\n            obj.position.z = 0;\n            obj.rotation.x = 0;\n            obj.rotation.y = 0;\n            obj.rotation.z = 0;\n            obj.traverse(child => {\n                if (child instanceof THREE.Mesh) {\n                    child.material = child.material.clone();\n                    return child.material.emissive.setHex(0x000000);\n                }\n            });\n            const objectBoundingBox = new THREE.Box3().setFromObject(obj);\n            this.objectHeight = objectBoundingBox.max.y - objectBoundingBox.min.y;\n            const objectWidth = objectBoundingBox.max.x - objectBoundingBox.min.x;\n            const objectDepth = objectBoundingBox.max.z - objectBoundingBox.min.z;\n            const horizontal = Math.hypot(objectWidth, objectDepth) / camera.aspect;\n            this.orbitRadius = Math.max(horizontal, this.objectHeight) * camera.zoom * 0.625 / Math.tan(camera.fov * 0.5 * (Math.PI / 180));\n            scene.add(obj);\n        };\n        render();\n    },\n});\n","import mod from \"-!../../../../../../../node_modules/ts-loader/index.js??ref--5-0!../../../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!../../../../../../../node_modules/vue-svg-inline-loader/dist/index.min.js!./preview.vue?vue&type=script&lang=ts&\"; export default mod; export * from \"-!../../../../../../../node_modules/ts-loader/index.js??ref--5-0!../../../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!../../../../../../../node_modules/vue-svg-inline-loader/dist/index.min.js!./preview.vue?vue&type=script&lang=ts&\"","import { render, staticRenderFns } from \"./preview.vue?vue&type=template&id=4cbb674b&\"\nimport script from \"./preview.vue?vue&type=script&lang=ts&\"\nexport * from \"./preview.vue?vue&type=script&lang=ts&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\n/* hot reload */\nif (module.hot) {\n  var api = require(\"/home/ubuntu/uma/misskey/node_modules/vue-hot-reload-api/dist/index.js\")\n  api.install(require('vue'))\n  if (api.compatible) {\n    module.hot.accept()\n    if (!api.isRecorded('4cbb674b')) {\n      api.createRecord('4cbb674b', component.options)\n    } else {\n      api.reload('4cbb674b', component.options)\n    }\n    module.hot.accept(\"./preview.vue?vue&type=template&id=4cbb674b&\", function () {\n      api.rerender('4cbb674b', {\n        render: render,\n        staticRenderFns: staticRenderFns\n      })\n    })\n  }\n}\ncomponent.options.__file = \"src/client/app/common/views/pages/room/preview.vue\"\nexport default component.exports","import Vue from 'vue';\nimport i18n from '../../../../i18n';\nimport { Room } from '../../../scripts/room/room';\nimport parseAcct from '../../../../../../misc/acct/parse';\nimport XPreview from './preview.vue';\nconst storeItems = require('../../../scripts/room/furnitures.json5');\nimport { faBoxOpen, faUndo, faArrowsAlt, faBan, faBroom } from '@fortawesome/free-solid-svg-icons';\nimport { faSave, faTrashAlt } from '@fortawesome/free-regular-svg-icons';\nimport { query as urlQuery } from '../../../../../../prelude/url';\nlet room;\nexport default Vue.extend({\n    i18n: i18n('room'),\n    components: {\n        XPreview\n    },\n    props: {\n        acct: {\n            type: String,\n            required: true\n        },\n    },\n    data() {\n        return {\n            objectSelected: false,\n            selectedFurnitureName: null,\n            selectedFurnitureInfo: null,\n            selectedFurnitureProps: null,\n            roomType: null,\n            carpetColor: null,\n            isTranslateMode: false,\n            isRotateMode: false,\n            isMyRoom: false,\n            changed: false,\n            faBoxOpen, faSave, faTrashAlt, faUndo, faArrowsAlt, faBan, faBroom,\n        };\n    },\n    async mounted() {\n        window.addEventListener('beforeunload', this.beforeunload);\n        const user = await this.$root.api('users/show', Object.assign({}, parseAcct(this.acct)));\n        this.isMyRoom = this.$store.getters.isSignedIn && this.$store.state.i.id === user.id;\n        const roomInfo = await this.$root.api('room/show', {\n            userId: user.id\n        });\n        this.roomType = roomInfo.roomType;\n        this.carpetColor = roomInfo.carpetColor;\n        room = new Room(user, this.isMyRoom, roomInfo, this.$el, {\n            graphicsQuality: this.$store.state.device.roomGraphicsQuality,\n            onChangeSelect: obj => {\n                this.objectSelected = obj != null;\n                if (obj) {\n                    const f = room.findFurnitureById(obj.name);\n                    this.selectedFurnitureName = this.$t('furnitures.' + f.type);\n                    this.selectedFurnitureInfo = storeItems.find(x => x.id === f.type);\n                    this.selectedFurnitureProps = f.props\n                        ? JSON.parse(JSON.stringify(f.props)) // Disable reactivity\n                        : null;\n                    this.$nextTick(() => {\n                        this.$refs.preview.selected(obj);\n                    });\n                }\n            },\n            useOrthographicCamera: this.$store.state.device.roomUseOrthographicCamera\n        });\n    },\n    beforeRouteLeave(to, from, next) {\n        if (this.changed) {\n            this.$root.dialog({\n                type: 'warning',\n                text: this.$t('leave-confirm'),\n                showCancelButton: true\n            }).then(({ canceled }) => {\n                if (canceled) {\n                    next(false);\n                }\n                else {\n                    next();\n                }\n            });\n        }\n        else {\n            next();\n        }\n    },\n    beforeDestroy() {\n        room.destroy();\n        window.removeEventListener('beforeunload', this.beforeunload);\n    },\n    methods: {\n        beforeunload(e) {\n            if (this.changed) {\n                e.preventDefault();\n                e.returnValue = '';\n            }\n        },\n        async add() {\n            const { canceled, result: id } = await this.$root.dialog({\n                type: null,\n                title: this.$t('add-furniture'),\n                select: {\n                    items: storeItems.map(item => ({\n                        value: item.id, text: this.$t('furnitures.' + item.id)\n                    }))\n                },\n                showCancelButton: true\n            });\n            if (canceled)\n                return;\n            room.addFurniture(id);\n            this.changed = true;\n        },\n        remove() {\n            this.isTranslateMode = false;\n            this.isRotateMode = false;\n            room.removeFurniture();\n            this.changed = true;\n        },\n        save() {\n            this.$root.api('room/update', {\n                room: room.getRoomInfo()\n            }).then(() => {\n                this.changed = false;\n                this.$root.dialog({\n                    type: 'success',\n                    text: this.$t('saved')\n                });\n            }).catch((e) => {\n                this.$root.dialog({\n                    type: 'error',\n                    text: e.message\n                });\n            });\n        },\n        clear() {\n            this.$root.dialog({\n                type: 'warning',\n                text: this.$t('clear-confirm'),\n                showCancelButton: true\n            }).then(({ canceled }) => {\n                if (canceled)\n                    return;\n                room.removeAllFurnitures();\n                this.changed = true;\n            });\n        },\n        chooseImage(key) {\n            this.$chooseDriveFile({\n                multiple: false\n            }).then(file => {\n                room.updateProp(key, `/proxy/?${urlQuery({ url: file.thumbnailUrl })}`);\n                this.$refs.preview.selected(room.getSelectedObject());\n                this.changed = true;\n            });\n        },\n        updateColor(key, ev) {\n            room.updateProp(key, ev.target.value);\n            this.$refs.preview.selected(room.getSelectedObject());\n            this.changed = true;\n        },\n        updateCarpetColor(ev) {\n            room.updateCarpetColor(ev.target.value);\n            this.carpetColor = ev.target.value;\n            this.changed = true;\n        },\n        updateRoomType(type) {\n            room.changeRoomType(type);\n            this.roomType = type;\n            this.changed = true;\n        },\n        translate() {\n            if (this.isTranslateMode) {\n                this.exit();\n            }\n            else {\n                this.isRotateMode = false;\n                this.isTranslateMode = true;\n                room.enterTransformMode('translate');\n            }\n            this.changed = true;\n        },\n        rotate() {\n            if (this.isRotateMode) {\n                this.exit();\n            }\n            else {\n                this.isTranslateMode = false;\n                this.isRotateMode = true;\n                room.enterTransformMode('rotate');\n            }\n            this.changed = true;\n        },\n        exit() {\n            this.isTranslateMode = false;\n            this.isRotateMode = false;\n            room.exitTransformMode();\n            this.changed = true;\n        }\n    }\n});\n","import mod from \"-!../../../../../../../node_modules/ts-loader/index.js??ref--5-0!../../../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!../../../../../../../node_modules/vue-svg-inline-loader/dist/index.min.js!./room.vue?vue&type=script&lang=ts&\"; export default mod; export * from \"-!../../../../../../../node_modules/ts-loader/index.js??ref--5-0!../../../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!../../../../../../../node_modules/vue-svg-inline-loader/dist/index.min.js!./room.vue?vue&type=script&lang=ts&\"","import { render, staticRenderFns } from \"./room.vue?vue&type=template&id=78de78e8&scoped=true&\"\nimport script from \"./room.vue?vue&type=script&lang=ts&\"\nexport * from \"./room.vue?vue&type=script&lang=ts&\"\nimport style0 from \"./room.vue?vue&type=style&index=0&id=78de78e8&lang=stylus&scoped=true&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"78de78e8\",\n  null\n  \n)\n\n/* hot reload */\nif (module.hot) {\n  var api = require(\"/home/ubuntu/uma/misskey/node_modules/vue-hot-reload-api/dist/index.js\")\n  api.install(require('vue'))\n  if (api.compatible) {\n    module.hot.accept()\n    if (!api.isRecorded('78de78e8')) {\n      api.createRecord('78de78e8', component.options)\n    } else {\n      api.reload('78de78e8', component.options)\n    }\n    module.hot.accept(\"./room.vue?vue&type=template&id=78de78e8&scoped=true&\", function () {\n      api.rerender('78de78e8', {\n        render: render,\n        staticRenderFns: staticRenderFns\n      })\n    })\n  }\n}\ncomponent.options.__file = \"src/client/app/common/views/pages/room/room.vue\"\nexport default component.exports","import mod from \"-!../../../../../../../node_modules/vue-style-loader/index.js!../../../../../../../node_modules/css-loader/dist/cjs.js!../../../../../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../../../../../node_modules/postcss-loader/src/index.js??ref--1-oneOf-1-2!../../../../../../../node_modules/stylus-loader/index.js!../../../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!../../../../../../../node_modules/vue-svg-inline-loader/dist/index.min.js!./room.vue?vue&type=style&index=0&id=78de78e8&lang=stylus&scoped=true&\"; export default mod; export * from \"-!../../../../../../../node_modules/vue-style-loader/index.js!../../../../../../../node_modules/css-loader/dist/cjs.js!../../../../../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../../../../../node_modules/postcss-loader/src/index.js??ref--1-oneOf-1-2!../../../../../../../node_modules/stylus-loader/index.js!../../../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!../../../../../../../node_modules/vue-svg-inline-loader/dist/index.min.js!./room.vue?vue&type=style&index=0&id=78de78e8&lang=stylus&scoped=true&\""],"sourceRoot":""}